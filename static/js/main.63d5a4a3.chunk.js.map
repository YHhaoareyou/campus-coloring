{"version":3,"sources":["locations.js","LocationsMenu.js","Home.js","ImageSwitch.js","atoms.js","auth.js","ActionMenu.js","Canvas.js","Paintings.js","notificationMap.js","Header.js","App.js","reportWebVitals.js","Scene.js","index.js","../node_modules/jsdom/lib/jsdom sync"],"names":["locations","garden","name","description","range","minLat","maxLat","minLong","maxLong","MapContainer","styled","div","BasePin","i","locationComponentPairs","loc","Pin","LocationsMenu","useState","currentCoor","setCurrentCoor","selectedLoc","setSelectedLoc","retrieveCoorFailed","setRetrieveCoorFailed","handleRetrievingCoor","navigator","geolocation","getCurrentPosition","position","coords","error","useEffect","retrieveCoorTimer","setInterval","clearInterval","isCoorInRange","LocCoorRange","latitude","longitude","style","paddingTop","className","color","map","onClick","textAlign","padding","Modal","centered","show","onHide","Header","closeButton","Title","Body","src","width","alt","to","Button","variant","Home","LeftSwitchWrapper","RightSwitchWrapper","SwitchButton","ImageSwitch","switchPrev","switchNext","Fragment","currentLocState","atom","key","default","currentImgIdState","currentImgSrcState","currentImgAngleState","currentImgSizeState","userState","dangerouslyAllowMutability","login","provider","GoogleAuthProvider","auth","getAuth","signInWithRedirect","useUser","useRecoilValue","MenuWrapper","Container","ActionButton","ActionMenu","imgInfo","openCanvas","canvasVisibility","likeTrigger","user","showModal","setShowModal","likes","Object","keys","length","setLikes","includes","uid","liked","setLiked","console","log","Row","Col","xs","Card","height","overflowY","as","margin","title","Text","fontSize","detail","size","window","location","href","origin","pathname","creator_id","disabled","prev_img_ids","id","isNew","PainterMenuWrapper","ActionButtonLg","getWindowDimensions","innerWidth","innerHeight","insertImageToCanvas","url","fabricCanvas","fabric","Image","fromURL","img","scaleToWidth","add","set","left","top","crossOrigin","Canvas","closeCanvas","basePrevIds","imgInfos","currentLoc","currentImgId","currentImgSrc","windowDimensions","setWindowDimensions","cv","useRef","lineColor","setLineColor","lineWidth","setLineWidth","fillColor","setFillColor","Tools","Pencil","tool","setTool","canUndo","setCanUndo","canRedo","setCanRedo","angle","setAngle","current","_fc","addEventListener","e","beta","Math","round","zIndex","backgroundColor","borderBottom","ref","forceValue","onChange","prev","now","imageFormat","paddingRight","ButtonGroup","Line","Rectangle","Circle","OverlayTrigger","trigger","placement","overlay","props","Popover","hex","border","display","verticalAlign","min","max","value","changeEvent","target","Select","removeSelected","alert","copy","paste","marginBottom","undo","redo","clear","confirm","lastAngle","storage","getStorage","db","getDatabase","prompt","Date","dataUrl","toDataURL","uploadString","storageRef","then","snap","getDownloadURL","Promise","all","dbSet","dbRef","prev_user_ids","type","username","displayName","s","catch","err","Paintings","useRecoilState","setCurrentLoc","setCurrentImgId","setCurrentImgSrc","useSetRecoilState","currentImgIdIndex","setCurrentImgIdIndex","setCurrentImgAngle","setCurrentImgSize","setCanvasVisibility","setImgInfos","isNewPainting","setIsNewPainting","initImgInfos","infos","imgInfosArr","Array","isArray","pid","queryString","parse","search","imgIdIndex","indexOf","switchImgSrc","imgId","get","exists","val","updateLikes","action","qs","mode","baseIds","bid","idsObj","forEach","userPaintingIdsSnap","prevIndex","stringify","history","replaceState","path","nextIndex","bottom","notificationMap","setTitle","notifications","setNotifications","Navbar","background","Collapse","Nav","back","Brand","NavDropdown","drop","marginLeft","nid","Item","navigateToPaintingFromNotification","signOut","logout","Auth","children","isLoading","setIsLoading","setUser","onAuthStateChanged","useAuth","App","event","mediaDevices","getUserMedia","video","audio","stream","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Scene","currentImgAngle","currentImgSize","imgSrcs","setImgSrcs","setPosition","rotation","setRotation","cos","PI","sin","renderer","arjs","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Root","ReactDOM","render","document","getElementById","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.63d5a4a3.chunk.js","sourcesContent":["const locations = {\n  garden: {\n    name: '中庭',\n    description: 'テスト用',\n    range: {\n      minLat: 35.0,\n      maxLat: 36.0,\n      minLong: 139.0,\n      maxLong: 140.0\n    }\n  },\n  '51': {\n    name: '51号館',\n    description: '北門寄りの空中通路からの視点',\n    range: {\n      minLat: 35.7061,\n      maxLat: 35.7066,\n      minLong: 139.7065,\n      maxLong: 139.7070\n    }\n  },\n  '55': {\n    name: '55号館外',\n    description: '外の廊下から、中庭向き；雨天OK',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7062,\n      minLong: 139.7078,\n      maxLong: 139.7083\n    }\n  },\n  '51_60_top': {\n    name: '51、60号館の間',\n    description: '59号館側の空中通路からの視点',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7060,\n      minLong: 139.7061,\n      maxLong: 139.7065\n    }\n  },\n  '60_61': {\n    name: '60、61号館の間',\n    description: '59号館側の地面通路からの視点；雨天OK',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7060,\n      minLong: 139.7057,\n      maxLong: 139.7061\n    }\n  }\n};\n\n  // '52': {\n  //   name: '52号館正面',\n  //   range: {\n  //     minLat: 35.7059,\n  //     maxLat: 35.7061,\n  //     minLong: 139.70695,\n  //     maxLong: 139.70725\n  //   }\n  // },\n  // '62': {\n  //   name: '62号館壁',\n  //   range: {\n  //     minLat: 35.70625,\n  //     maxLat: 35.70645,\n  //     minLong: 139.7054,\n  //     maxLong: 139.7057\n  //   }\n  // },\n\nexport default locations;","import { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport locations from './locations';\n\nconst MapContainer = styled.div`\n  position: relative;\n  margin: 0px auto;\n  width: 400px;\n  height: 160px;\n  background-image: url('/img/map.jpeg');\n  background-size: contain;\n`;\n\nconst BasePin = styled.i`\n  position: absolute;\n  font-size: 24px;\n`;\n\nconst PinGarden = styled(BasePin)`\ntop: 50px;\nleft: 250px;\n`;\n\nconst Pin51 = styled(BasePin)`\n  top: -10px;\n  left: 170px;\n`;\n\n// const Pin52 = styled(BasePin)`\n//   top: 60px;\n//   left: 210px;\n// `;\n\nconst Pin51_60 = styled(BasePin)`\n  top: 70px;\n  left: 135px;\n`;\n\nconst Pin60_61 = styled(BasePin)`\n  top: 70px;\n  left: 105px;\n`;\n\n// const Pin58 = styled(BasePin)`\n//   top: 20px;\n//   left: 60px;\n// `;\n\n// const Pin62 = styled(BasePin)`\n//   top: 20px;\n//   left: 70px;\n// `;\n\nconst Pin55 = styled(BasePin)`\n  top: 50px;\n  left: 310px;\n`;\n\nconst locationComponentPairs = process.env.NODE_ENV === \"development\" ? [\n  {loc: '51', Pin: Pin51},\n  {loc: '51_60_top', Pin: Pin51_60},\n  {loc: '60_61', Pin: Pin60_61},\n  {loc: '55', Pin: Pin55},\n  {loc: 'garden', Pin: PinGarden}\n] : [\n  {loc: '51', Pin: Pin51},\n  {loc: '51_60_top', Pin: Pin51_60},\n  {loc: '60_61', Pin: Pin60_61},\n  {loc: '55', Pin: Pin55},\n]\n\nfunction LocationsMenu() {\n  const [currentCoor, setCurrentCoor] = useState(null);\n  const [selectedLoc, setSelectedLoc] = useState('');\n  const [retrieveCoorFailed, setRetrieveCoorFailed] = useState(false);\n\n  const handleRetrievingCoor = () => {\n    navigator.geolocation.getCurrentPosition(\n      function(position) {\n        setCurrentCoor(position.coords);\n        if (retrieveCoorFailed) setRetrieveCoorFailed(false);\n      },\n      function(error) {\n        setRetrieveCoorFailed(true);\n      }\n    );\n  }\n\n  useEffect(() => {\n    handleRetrievingCoor();\n    var retrieveCoorTimer = setInterval(handleRetrievingCoor, 5000);\n    return () => clearInterval(retrieveCoorTimer);\n  }, [])\n\n  const isCoorInRange = (LocCoorRange) =>\n    currentCoor && LocCoorRange\n      && (currentCoor.latitude >= LocCoorRange.minLat)\n      && (currentCoor.latitude <= LocCoorRange.maxLat)\n      && (currentCoor.longitude >= LocCoorRange.minLong)\n      && (currentCoor.longitude <= LocCoorRange.maxLong);\n\n  return (\n    <div style={{ paddingTop: '70px' }}>\n      <h3>場所を選択</h3>\n      {\n        !currentCoor && <p><i className=\"bi bi-arrow-clockwise\"></i> 位置情報取得中...</p>\n      }\n      {\n        retrieveCoorFailed && <p style={{ color: 'red' }}>位置情報取得失敗。位置情報の取得を許可し、遮蔽物のない空間に移動して数秒待ってください。</p>\n      }\n\n      <MapContainer>\n        {\n          locationComponentPairs.map(({loc, Pin}) => \n            <Pin key={loc} onClick={() => setSelectedLoc(loc)} className='bi bi-geo-alt-fill' style={{ color: isCoorInRange(locations[loc].range) ? 'orange' : 'black' }} />\n          )\n        }\n      </MapContainer>\n\n      <div style={{ textAlign: 'left', padding: '20px' }}>\n        <strong>説明</strong>\n        <ul>\n          <li>ピンをタッチすると、そこの景色が映った画像が表示されます</li>\n          <li>ピンされた場所の近くに移動すると、ピンが黄色になり、タッチすると絵が見えます</li>\n          <li>5秒ごとに位置情報を取得します</li>\n        </ul>\n\n        <strong>場所一覧</strong>\n        <ul>\n          <li><b>51号館</b>：北門寄りの空中通路からの視点</li>\n          <li><b>55号館外</b>：外の廊下から、中庭向き；雨天OK</li>\n          <li><b>51、60号館の間</b>：59号館側の地面通路からの視点</li>\n          <li><b>60、61号館の間</b>：59号館側の空中通路からの視点；雨天OK</li>\n        </ul>\n      </div>\n\n\n      <Modal centered show={selectedLoc !== ''} onHide={() => setSelectedLoc('')}>\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedLoc && locations[selectedLoc].name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <p>{selectedLoc && locations[selectedLoc].description}</p>\n          <img src={`/img/loc/${selectedLoc}.jpeg`} width='80%' alt=\"View of the location\" />\n          {\n            selectedLoc && (isCoorInRange(locations[selectedLoc].range) || selectedLoc === 'garden')\n              ? (\n                <div>\n                  <p>↑の景色にカメラを向けてください</p>\n                  <Link to={'/' + selectedLoc}>\n                    <Button variant=\"outline-primary\">\n                      絵を観る\n                    </Button>\n                  </Link>\n                </div>\n              )\n              : (\n                <div>\n                  <p>この場所に移動し、数秒待つと絵が見えるよ</p>\n                  <p>移動してもダメでしたら、画面を更新してください</p>\n                </div>\n              )\n          }\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default LocationsMenu;\n","import LocationsMenu from './LocationsMenu';\n\nfunction Home() {\n\n  return (\n    <div>\n      <LocationsMenu />\n    </div>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\nconst LeftSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  left: 0;\n`\n\nconst RightSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  right: 0;\n`\n\nconst SwitchButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.3);\n  color: rgba(200, 200, 200);\n  border: none;\n  font-size: 36px;\n  padding: 0px;\n`;\n\nfunction ImageSwitch({ switchPrev, switchNext }) {\n  return(\n    <React.Fragment>\n      <LeftSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchPrev}><i className=\"bi bi-chevron-compact-left\"></i></SwitchButton>\n      </LeftSwitchWrapper>\n      <RightSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchNext}><i className=\"bi bi-chevron-compact-right\"></i></SwitchButton>\n      </RightSwitchWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default ImageSwitch;","import { atom } from \"recoil\";\n\nexport const currentLocState = atom({\n  key: 'currentLocState',\n  default: '',\n});\n\nexport const currentImgIdState = atom({\n  key: 'currentImgIdState',\n  default: '',\n});\n\nexport const currentImgSrcState = atom({\n  key: 'currentImgSrcState',\n  default: '',\n});\n\nexport const currentImgAngleState = atom({\n  key: 'currentImgAngleState',\n  default: 0,\n});\n\nexport const currentImgSizeState = atom({\n  key: 'currentImgSizeState',\n  default: null,\n});\n\nexport const userState = atom ({\n  key: 'userState',\n  default: null,\n  dangerouslyAllowMutability: true,\n})","import { useEffect, useState } from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { userState } from './atoms';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signOut,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n} from \"firebase/auth\";\n\nexport const login = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  return signInWithRedirect(auth, provider);\n};\n\nexport const logout = () => {\n  const auth = getAuth();\n  return signOut(auth);\n};\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const setUser = useSetRecoilState(userState);\n\n  useEffect(() => {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n  }, [setUser]);\n\n  return isLoading;\n};\n\nexport const useUser = () => {\n  return useRecoilValue(userState);\n};","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, Card, Modal } from 'react-bootstrap';\nimport { useUser } from './auth';\n\nconst MenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(248, 249, 250, 0.5);\n  padding: 10px;\n  padding-right: 20px;\n`\n\nconst ActionButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.5);\n  border: none;\n  width: 100%;\n`\n\nfunction ActionMenu({ imgInfo, openCanvas, canvasVisibility, likeTrigger }) {\n  const user = useUser();\n  const [showModal, setShowModal] = useState(false);\n  const [likes, setLikes] = useState(imgInfo.likes ? Object.keys(imgInfo.likes).length : 0)\n  const [liked, setLiked] = useState(imgInfo.likes && Object.keys(imgInfo.likes).includes(user.uid))\n\n  const handleLikeTrigger = () => {\n    likeTrigger();\n    setLikes(liked ? likes - 1 : likes + 1);\n    setLiked(!liked);\n  }\n\n  const navigateToBasePaintings = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=base&bid=' + imgInfo.id;\n  }\n\n  const navigateToUserPaintings = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=user&uid=' + imgInfo.creator_id;\n  }\n\n  useEffect(() => {\n    console.log(imgInfo.likes)\n    setLikes(imgInfo.likes ? Object.keys(imgInfo.likes).length : 0);\n    setLiked(imgInfo.likes && Object.keys(imgInfo.likes).includes(user.uid));\n  }, [imgInfo])\n\n  return !canvasVisibility && (\n    <MenuWrapper>\n      <Row>\n        <Col xs={8}>\n          <Card style={{ height: '100px', overflowY: 'scroll' }}>\n            <Card.Body style={{ padding: '5px' }}>\n              <Card.Title as='h6' style={{ margin: '5px' }}>{imgInfo.title}</Card.Title>\n              <Card.Text style={{ fontSize: '14px' }}>\n                {imgInfo.detail}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={4}>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={navigateToUserPaintings}>\n                <i className=\"bi bi-person\"></i>\n                <br />\n                ユーザ\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={handleLikeTrigger}>\n                <i className=\"bi bi-heart\" style={{ color: liked ? 'red' : 'black' }}></i>\n                <br />\n                {likes}\n              </ActionButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' disabled={!imgInfo.prev_img_ids} onClick={navigateToBasePaintings}>\n                <i className=\"bi bi-collection\"></i>\n                <br />\n                前作へ\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => setShowModal(true)}>\n                <i className=\"bi bi-pencil\"></i>\n                <br />\n                描こう\n              </ActionButton>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <Modal centered show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>どんな絵を描きたい？</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: true }); setShowModal(false);}}>\n            新しく描こう\n          </Button>\n          <br /><br />\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: false }); setShowModal(false);}}>\n            これをベースにして描こう\n          </Button>\n        </Modal.Body>\n      </Modal>\n\n    </MenuWrapper>\n  )\n}\n\nexport default ActionMenu;","import { useEffect, useState, useRef } from 'react';\nimport { getDatabase, ref as dbRef, set as dbSet } from \"firebase/database\";\nimport { getStorage, ref as storageRef, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, ButtonGroup, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { useUser } from './auth'\n\nimport { CompactPicker } from 'react-color';\nimport { SketchField, Tools } from 'react-sketch';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { fabric } from \"fabric\";\n\nconst PainterMenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 120px;\n  padding: 5px;\n  background-color: rgba(248, 249, 250, 0.5);\n`;\n\nconst ActionButton = styled(Button)`\n  margin: 0px;\n  margin-bottom: 2px;\n  padding: 0px;\n  width: 60px;\n  height: 35px;\n`;\n\nconst ActionButtonLg = styled(ActionButton)`\n  width: 50px;\n  height: 50px;\n`\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction insertImageToCanvas(url, fabricCanvas) {\n  fabric.Image.fromURL(\n    url,\n    function (img) {\n      img.scaleToWidth(getWindowDimensions().width);\n      fabricCanvas.add(img.set({\n        left: 0,\n        top: 0,\n      }));\n    },\n    {\n      crossOrigin: 'Anonymous'\n    }\n  )\n}\n\nconst Canvas = ({ closeCanvas, basePrevIds, isNew, imgInfos }) => {\n  const user = useUser();\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const cv = useRef(null);\n  const [ lineColor, setLineColor ] = useState('#000');\n  const [ lineWidth, setLineWidth ] = useState(5);\n  const [ fillColor, setFillColor ] = useState('transparent');\n  const [ tool, setTool ] = useState(Tools.Pencil);\n  const [ canUndo, setCanUndo ] = useState(false);\n  const [ canRedo, setCanRedo ] = useState(false);\n  const [ angle, setAngle ] = useState(0);\n\n  // load base painting on canvas\n  useEffect(() => {\n    setWindowDimensions(getWindowDimensions());\n    if (!isNew) {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  }, [isNew, currentImgSrc]);\n\n  useEffect(() => {\n    window.addEventListener(\"deviceorientation\", function(e){\n      const { beta } = e;\n      setAngle(Math.round(beta * 100) / 100)\n    });\n  }, [])\n\n  const undo = () => {\n    cv.current.undo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const redo = () => {\n    cv.current.redo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const clear = () => {\n    cv.current.clear();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n    if (!isNew) {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  };\n\n  const duplicateSelected = () => {\n    try {\n      cv.current.copy();\n      cv.current.paste();\n    } catch (error) {\n      alert(\"まずコピペしたいパーツを選択してください\")\n    }\n  }\n\n  const removeSelected = () => {\n    try {\n      cv.current.removeSelected();\n    } catch (error) {\n      alert(\"まず削除したいパーツを選択してください\")\n    }\n  }\n\n  // Todo: save draft\n\n  const onSketchChange = () => {\n    let prev = canUndo;\n    let now = cv.current?.canUndo();\n    if (prev !== now) setCanUndo(now);\n  };\n\n  const saveCanvas = () => {\n    if(!window.confirm(\"あなたの作品を最も適切に表示するように、スマホの前後傾きを固定してからOKを押してください！\")) return;\n    const lastAngle = angle;\n    if (lastAngle) {\n      alert(\"傾きを取得しました。今からタイピングに適した姿勢に変えていただいても大丈夫です。\");\n    } else {\n      alert(\"エラーが発生しました。もう一度チェックボタンを押してください。\");\n      return;\n    }\n\n    var title, detail, id;\n    const storage = getStorage();\n    const db = getDatabase();\n\n    title = prompt(\"タイトル：\");\n    detail = prompt(\"この作品についての説明：\");\n    \n    id = Date.now();\n    if (title === \"\") title = id;\n\n    const dataUrl = cv.current.toDataURL();\n\n    uploadString(storageRef(storage, 'paintings/' + title), dataUrl, 'data_url')\n      .then(snap => getDownloadURL(snap.ref))\n      .then(url => {\n\n        Promise.all([\n          dbSet(dbRef(db, 'img_urls/' + currentLoc + '/' + id), url), // save url\n          dbSet(dbRef(db, 'img_info/' + currentLoc + '/' + id), {\n            title,\n            detail,\n            angle: lastAngle,\n            size: {\n              width: windowDimensions.width,\n              height: windowDimensions.height - 120,\n            },\n            creator_id: user.uid,\n            prev_img_ids: !isNew && { [currentImgId]: true, ...basePrevIds }\n          }), // save info\n          dbSet(dbRef(db, 'users/' + user.uid + '/img_ids/' + currentLoc + '/' + id), true) // add img id to user\n        ]).then(snap => {\n\n          // send notifications\n          const prev_user_ids = imgInfos.map(img => img.creator_id);\n          Promise.all(prev_user_ids.map(uid => dbSet(dbRef(db, 'users/' + uid + '/notifications/' + id), {\n            type: 0,\n            loc: currentLoc,\n            username: user.displayName\n          })))\n            .then(s => {\n              dbSet(dbRef(db, 'users/' + user.uid + '/name'), user.displayName)\n                .then(snap => {\n\n                  // upload success & reload\n                  alert(\"アップロードしました！\");\n                  closeCanvas();\n                  window.location.href = \"/\" + currentLoc + \"?pid=\" + id\n\n                }).catch(err => alert(err));\n            }).catch(err => alert(err));\n        }).catch(err => alert(err));\n      }).catch(err => alert(err));\n  }\n\n  const colorSelector = (props) => (\n    <Popover {...props} style={{ ...props.style, padding: '10px' }}>\n      線<br />\n      <CompactPicker\n        id='lineColor'\n        color={lineColor}\n        onChange={(color) => setLineColor(color.hex)}\n      />\n      <br /><br />\n      中身{\" \"}\n      <Button style={{ padding: '0px 10px' }} variant='secondary' onClick={() => setFillColor('transparent')}>中身なし</Button>\n      <br />\n      <CompactPicker\n        id='fillColor'\n        color={fillColor}\n        onChange={(color) => {setFillColor(color.hex); setLineColor('#000'); setLineColor(lineColor);}}\n      />\n    </Popover>\n  )\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        zIndex: 1000,\n        left: 0,\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        borderBottom: \"5px solid #aaa\"\n      }}\n    >\n      <SketchField\n        name=\"sketch\"\n        className=\"canvas-area\"\n        ref={cv}\n        lineColor={lineColor}\n        lineWidth={lineWidth}\n        fillColor={fillColor || 'transparent'}\n        width={windowDimensions.width}\n        height={windowDimensions.height}\n        forceValue\n        onChange={onSketchChange}\n        tool={tool}\n        imageFormat={'jpeg'}\n      />\n\n      <PainterMenuWrapper>\n        <Row>\n          <Col xs={7} style={{ paddingRight: '5px' }}>\n            <div>\n              <ButtonGroup>\n                <Button variant={tool === Tools.Pencil ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Pencil)}><i className=\"bi bi-pencil\" /></Button>\n                <Button variant={tool === Tools.Line ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Line)}><i className=\"bi bi-slash-lg\" /></Button>\n                <Button variant={tool === Tools.Rectangle ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Rectangle)}><i className=\"bi bi-square\" /></Button>\n                <Button variant={tool === Tools.Circle ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Circle)}><i className=\"bi bi-circle\" /></Button>\n                <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={colorSelector} style={{ position: 'relative' }}>\n                  <Button variant='light' style={{ padding: '3px' }}>\n                    <i className=\"bi bi-palette\" />{\" \"}\n                    <span style={{ border: '3px solid' + lineColor, backgroundColor: fillColor, width: '15px', height: '15px', display: 'inline-block', verticalAlign: 'middle' }}></span>\n                  </Button>\n                </OverlayTrigger>\n              </ButtonGroup>\n            </div>\n\n            <div>\n              <span style={{ display: 'inline-block', width: '20px' }}></span>\n              <i className=\"bi bi-border-width\" />{\" \"}\n              <div style={{ display: 'inline-block', verticalAlign: 'middle' }}>\n                <RangeSlider\n                  min={1}\n                  max={30}\n                  value={lineWidth}\n                  onChange={changeEvent => setLineWidth(changeEvent.target.value)}\n                />\n              </div>\n            </div>\n\n            <ButtonGroup>\n              <ActionButton variant={tool === Tools.Select ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Select)}><i className=\"bi bi-hand-index-thumb\" /></ActionButton>\n              <ActionButton disabled={tool !== Tools.Select} variant='light' onClick={removeSelected}><i className='bi bi-trash' /></ActionButton>\n              <ActionButton disabled={tool !== Tools.Select} variant='light' onClick={duplicateSelected}><i className='bi bi-files' /></ActionButton>\n            </ButtonGroup>\n          </Col>\n\n          <Col xs={5}>\n            <ButtonGroup style={{ marginBottom: '5px' }}>\n              <ActionButtonLg disabled={!canUndo} variant='light' onClick={undo}><i className='bi bi-arrow-90deg-left' /></ActionButtonLg>\n              <ActionButtonLg disabled={!canRedo} variant='light' onClick={redo}><i className='bi bi-arrow-90deg-right' /></ActionButtonLg>\n              <ActionButtonLg variant='light' onClick={clear}><i className='bi bi-arrow-counterclockwise' /></ActionButtonLg>\n            </ButtonGroup>\n\n            <ButtonGroup>\n              <ActionButtonLg variant='light' onClick={saveCanvas}><i className='bi bi-check-lg' /></ActionButtonLg>\n              <ActionButtonLg disabled={true} variant='secondary' onClick={() => {}}><i className='bi bi-hdd' /></ActionButtonLg>\n              <ActionButtonLg variant='light' onClick={closeCanvas}><i className='bi bi-x-lg' /></ActionButtonLg>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </PainterMenuWrapper>\n    </div>\n  )\n};\n\nexport default Canvas;","import { useEffect, useState } from 'react';\nimport ImageSwitch from './ImageSwitch';\nimport ActionMenu from './ActionMenu';\nimport Canvas from './Canvas';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { currentImgIdState, currentImgSrcState, currentImgAngleState, currentImgSizeState, currentLocState } from './atoms.js';\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport { useUser } from './auth'\nimport queryString from 'query-string';\nimport Button from 'react-bootstrap/Button';\n\nfunction Paintings({ loc, location }) {\n  const [currentLoc, setCurrentLoc] = useRecoilState(currentLocState);\n  const [currentImgId, setCurrentImgId] = useRecoilState(currentImgIdState);\n  const setCurrentImgSrc = useSetRecoilState(currentImgSrcState);\n  const [currentImgIdIndex, setCurrentImgIdIndex] = useState(0);\n  const setCurrentImgAngle = useSetRecoilState(currentImgAngleState);\n  const setCurrentImgSize = useSetRecoilState(currentImgSizeState);\n  const [canvasVisibility, setCanvasVisibility] = useState(false);\n  const [imgInfos, setImgInfos] = useState([]);\n  const [isNewPainting, setIsNewPainting] = useState(true);\n  const user = useUser();\n\n  const switchToPrevImg = () => {\n    if (imgInfos.length > 1) {\n      const prevIndex = currentImgIdIndex === 0 ? imgInfos.length - 1 : currentImgIdIndex - 1;\n      setCurrentImgIdIndex(prevIndex);\n      setCurrentImgId(imgInfos[prevIndex].id);\n      switchImgSrc(imgInfos[prevIndex].id);\n      setCurrentImgAngle(imgInfos[prevIndex].angle);\n      setCurrentImgSize(imgInfos[prevIndex].size);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[prevIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const switchToNextImg = () => {\n    if (imgInfos.length > 1) {\n      const nextIndex = currentImgIdIndex === imgInfos.length - 1 ? 0 : currentImgIdIndex + 1;\n      setCurrentImgIdIndex(nextIndex);\n      setCurrentImgId(imgInfos[nextIndex].id);\n      switchImgSrc(imgInfos[nextIndex].id);\n      setCurrentImgAngle(imgInfos[nextIndex].angle);\n      setCurrentImgSize(imgInfos[nextIndex].size);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[nextIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const initImgInfos = (infos) => {\n    var imgInfosArr = infos;\n    if (!Array.isArray(infos)) {\n      imgInfosArr = Object.keys(infos).map(id => ({\n        id: id,\n        ...infos[id]\n      }))\n    }\n\n    const pid = queryString.parse(location.search).pid;\n    setImgInfos(imgInfosArr);\n    setCurrentImgId(pid || imgInfosArr[0].id);\n    const imgIdIndex = pid ? imgInfosArr.map(img => img.id).indexOf(pid) : 0;\n    setCurrentImgIdIndex(imgIdIndex);\n    switchImgSrc(pid || imgInfosArr[0].id);\n    setCurrentImgAngle(imgInfosArr[imgIdIndex].angle);\n    setCurrentImgSize(imgInfosArr[imgIdIndex].size);\n  }\n\n  const switchImgSrc = (imgId) => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + loc + '/' + imgId)).then(snap => {\n      if(snap.exists()){\n        setCurrentImgSrc(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }\n\n  const updateLikes = (action) => {\n    var infos = imgInfos;\n    if (action === 1) {\n      infos[currentImgIdIndex].likes = {\n        ...infos[currentImgIdIndex].likes,\n        [user.uid]: true\n      };\n    } else {\n      delete infos[currentImgIdIndex].likes[user.uid]\n    }\n    setImgInfos(infos);\n  }\n\n  const likeTrigger = () => {\n    const db = getDatabase();\n    if (imgInfos[currentImgIdIndex].likes && imgInfos[currentImgIdIndex].likes[user.uid]) {\n      set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + user.uid), null).then(snap => updateLikes(-1)).catch(err => alert(err));\n    } else {\n      set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + user.uid), true).then(snap => {\n        updateLikes(1);\n        set(ref(db, 'users/' + imgInfos[currentImgIdIndex].creator_id + '/notifications/' + currentImgId), {\n          type: 1,\n          loc: currentLoc,\n          username: imgInfos[currentImgIdIndex].likes && Object.keys(imgInfos[currentImgIdIndex].likes).length > 1 ? user.displayName + \"と他の\" + (Object.keys(imgInfos[currentImgIdIndex].likes).length - 1) + \"人\" : user.displayName\n        })\n      }).catch(err => alert(err));\n    }\n  }\n\n  useEffect(() => {\n    setCurrentLoc(loc);\n\n    const qs = queryString.parse(location.search)\n    const db = getDatabase();\n    get(ref(db, 'img_info/' + loc)).then(snap => {\n      if(snap.exists()){\n        if (qs.mode && qs.mode === 'base') {\n          const baseIds = Object.keys(snap.val()[qs.bid].prev_img_ids);\n          var idsObj = {};\n          baseIds.forEach(id => {\n            idsObj[id] = snap.val()[id]\n          });\n          initImgInfos(idsObj);\n        } else if (qs.mode && qs.mode === 'user') {\n          get(ref(db, 'users/' + qs.uid + '/img_ids/' + loc)).then(userPaintingIdsSnap => {\n            var idsObj = {};\n            if (userPaintingIdsSnap.val()) {\n              Object.keys(userPaintingIdsSnap.val()).forEach(id => {\n                idsObj[id] = snap.val()[id]\n              });\n              initImgInfos(idsObj);\n            }\n          })\n        } else {\n          initImgInfos(snap.val());\n        }\n      }\n    }).catch(err => console.error(err));\n  }, [])\n\n  return (\n    <div>\n      <ImageSwitch switchPrev={switchToPrevImg} switchNext={switchToNextImg} />\n      {\n        imgInfos.length > 0 ? (\n          <ActionMenu\n            imgInfo={imgInfos[currentImgIdIndex]}\n            openCanvas={({ isNew }) => {setCanvasVisibility(true); setIsNewPainting(isNew);}}\n            canvasVisibility={canvasVisibility}\n            likeTrigger={likeTrigger}\n          />\n        ) : (\n          <Button\n            style={{ position: 'absolute', bottom: 0, left: 0, width: '100vw' }}\n            onClick={() => {setCanvasVisibility(true); setIsNewPainting(true);}}\n          >この場所で初の作品を描こう！</Button>\n        )\n      }\n      {\n        canvasVisibility && (\n          <Canvas\n            isNew={isNewPainting}\n            basePrevIds={imgInfos[currentImgIdIndex]?.prev_img_ids || {}}\n            closeCanvas={() => setCanvasVisibility(false)}\n            imgInfos={imgInfos}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Paintings;\n","const notificationMap = [\n  \"があなたの作品に基づいて描きました！\",\n  \"があなたの作品に「いいね」！\"\n];\n\nexport default notificationMap;","import { Navbar, Nav, NavDropdown, Container, Button } from 'react-bootstrap';\nimport { login, logout, useUser } from './auth';\nimport locations from './locations';\nimport { currentLocState } from './atoms';\nimport { useRecoilValue } from 'recoil';\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport notificationMap from './notificationMap';\n\nfunction Header() {\n  const user = useUser();\n  const loc = useRecoilValue(currentLocState);\n  const [title, setTitle] = useState('Campus as Canvas');\n  const [notifications, setNotifications] = useState({});\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  const handleLogout = () => {\n    logout().catch((error) => console.error(error));\n  };\n\n  const navigateToMyPaintings = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=user&uid=' + user.uid;\n  }\n\n  const navigateToPaintingFromNotification = (location, nid) => {\n    set(ref(getDatabase(), 'users/' + user.uid + '/notifications/' + nid), null)\n      .then(snap => window.location.href = window.location.origin + '/' + location + '?pid=' + nid)\n      .catch(err => alert(err));\n  }\n\n  const clearNotifications = () => {\n    set(ref(getDatabase(), 'users/' + user.uid + '/notifications/'), null);\n    setNotifications({});\n  }\n\n  useEffect(() => {\n    const db = getDatabase();\n    const qs = queryString.parse(window.location.search);\n    if (qs.mode && qs.mode === 'base') {\n      get(ref(db, 'img_info/' + loc + '/' + qs.bid + '/title')).then(snap => {\n        setTitle('「' + snap.val() + '」のベース作品');\n      })\n    } else if (qs.mode && qs.mode === 'user') {\n      get(ref(db, 'users/' + qs.uid + '/name')).then(snap => {\n        setTitle(snap.val() + 'の作品');\n      })\n    } else {\n      if (loc) setTitle(locations[loc].name)\n    }\n\n    user && get(ref(db, 'users/' + user.uid + '/notifications')).then(snap => {\n      setNotifications(snap.val());\n    })\n  }, [loc])\n\n  return(\n    <Navbar style={{ position: 'absolute', left: 0, top: 0, width: '100vw', background: 'rgba(255, 255, 255, 0.5)' }}>\n      <Container>\n        {loc && <Navbar.Collapse>\n          <Nav className=\"me-auto\">\n            <Button className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.location.href = '/'}>\n              <i className=\"bi bi-house\"></i>\n            </Button>\n            <span style={{ width: '10px' }}></span>\n            <Button className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.history.back()}>\n              <i className=\"bi bi-chevron-compact-left\"></i>\n            </Button>\n          </Nav>\n        </Navbar.Collapse>}\n\n        <Navbar.Brand>{title}</Navbar.Brand>\n\n        <Navbar.Collapse>\n          <Nav className=\"me-auto\"></Nav>\n          <Nav>\n            <NavDropdown title={<span><i className=\"bi bi-bell\"></i>{notifications && Object.keys(notifications).length}</span>} drop={'start'}>\n              <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '10px' }} onClick={clearNotifications}>クリア</Button>\n              {\n                notifications && Object.keys(notifications).map(nid => (\n                  <NavDropdown.Item key={nid} disabled={!loc || loc !== notifications[nid].loc} onClick={() => navigateToPaintingFromNotification(loc, nid)}>\n                    {notifications[nid].username + notificationMap[notifications[nid].type]}\n                    <br />\n                    <small>{loc && loc === notifications[nid].loc ? 'クリックして見にいく' : 'この場所のARモードに入ったら見れるよ'}</small>\n                  </NavDropdown.Item>\n                ))\n              }\n            </NavDropdown>\n            <NavDropdown title={<i className=\"bi bi-person-circle\"></i>} drop={'start'}>\n              <p style={{ textAlign: 'center' }}>{user?.displayName}</p>\n              {\n                user\n                  ? <NavDropdown.Item onClick={handleLogout}>ログアウト</NavDropdown.Item>\n                  : <NavDropdown.Item onClick={handleLogin}>ログイン</NavDropdown.Item>\n              }\n              {loc && <NavDropdown.Item onClick={navigateToMyPaintings}>自分の絵を見る：<br /> {locations[loc].name}</NavDropdown.Item>}\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header;","import { Router } from '@reach/router';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport Home from './Home';\nimport Paintings from \"./Paintings\";\nimport { useAuth, useUser, login } from './auth';\nimport Header from './Header';\nimport { Button } from 'react-bootstrap';\nimport { useEffect } from 'react';\n\nconst Auth = ({ children }) => {\n  const isLoading = useAuth();\n\n  return isLoading ? <p>Loading...</p> : children;\n};\n\nfunction App() {\n  const user = useUser();\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    window.addEventListener('popstate', (event) => {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n        .then(stream => {\n          console.log(\"Camera on\")\n        })\n        .catch(err => {\n          console.error(err)\n        });\n    });\n  })\n\n  return (\n    <div className=\"App\">\n      <Auth>\n        <div>\n          {\n            user\n              ? (\n                <div>\n                  <Header />\n                  <Router>\n                    <Home path=\"/\" />\n                    <Paintings path=\"/:loc\" />\n                  </Router>\n                </div>\n              )\n              : (\n                <div>\n                  <Header />\n                  <Button style={{ marginTop: '45vh' }} onClick={handleLogin}>Googleアカウントでログイン</Button>\n                </div>\n              )\n          }\n        </div>\n      </Auth>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState, currentImgAngleState, currentImgSizeState } from './atoms.js';\nimport { getDatabase, ref, get } from \"firebase/database\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction Scene() {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgAngle = useRecoilValue(currentImgAngleState);\n  const currentImgSize = useRecoilValue(currentImgSizeState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const [imgSrcs, setImgSrcs] = useState({});\n  const [position, setPosition] = useState(\"0.3 1.5 -10\");\n  const [rotation, setRotation] = useState(\"0 0 0\");\n\n  useEffect(() => {\n    setWindowDimensions(getWindowDimensions());\n\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + currentLoc)).then(snap => {\n      if(snap.exists()){\n        setImgSrcs(snap.val())\n      }\n    }).catch(err => console.error(err));\n    setPosition(`-0.3 ${1.5 - Math.round(Math.cos(currentImgAngle*Math.PI/180) * 50 * 100) / 100} ${(-1)*Math.round(Math.sin(currentImgAngle*Math.PI/180) * 50 * 100) / 100}`);\n    setRotation(`${currentImgAngle-90} 0 0`);\n  }, [currentLoc]);\n\n  useEffect(() => {\n    setPosition(`-0.3 ${1.5 - Math.round(Math.cos(currentImgAngle*Math.PI/180) * 50 * 100) / 100} ${(-1)*Math.round(Math.sin(currentImgAngle*Math.PI/180) * 50 * 100) / 100}`);\n    setRotation(`${currentImgAngle-90} 0 0`);\n  }, [currentImgAngle])\n\n  return (\n    <a-scene\n      id=\"a-scene\"\n      vr-mode-ui=\"enabled: false;\"\n      renderer=\"logarithmicDepthBuffer: true;\"\n      arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n    >\n      <a-assets>\n        {imgSrcs && Object.keys(imgSrcs).map(imgId => <img key={imgId} id={imgId} src={imgSrcs[imgId]} crossOrigin=\"anonymous\" alt={\"Painting \" + imgId} />)}\n      </a-assets>\n      {currentImgSrc && <a-image\n        src={'#'+currentImgId}\n        width={currentImgSize ? windowDimensions.width / (8 * windowDimensions.width / 414) : 52}\n        height={currentImgSize ? currentImgSize.height * windowDimensions.width / currentImgSize.width / (12.5 * windowDimensions.height / 617) : 40}\n        position={position}\n        rotation={rotation}>\n      </a-image>}\n      \n      {/* <a-entity camera></a-entity> */}\n    </a-scene>\n  )\n}\n\nexport default Scene;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeApp } from 'firebase/app';\nimport Scene from './Scene';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState } from './atoms.js';\nimport { RecoilRoot } from \"recoil\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\ninitializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\nconst Root = () => {\n  const currentLoc = useRecoilValue(currentLocState);\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      {currentLoc && <Scene />}\n      <App />\n    </div>\n  );\n}\n\nReactDOM.render(<RecoilRoot><Root /></RecoilRoot>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 671;"],"sourceRoot":""}