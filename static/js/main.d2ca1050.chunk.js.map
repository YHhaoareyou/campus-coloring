{"version":3,"sources":["ImageSwitch.js","LikeButton.js","Footer.js","Canvas.js","App.js","Nft.js","img/hiro-marker.png","Scene.js","index.js"],"names":["ImageSwitchWrapper","styled","Grid","ImageSwitch","switchToPrev","switchToNext","Column","width","Button","icon","onClick","circular","LikeButton","state","likes","props","image","isClicked","like","location","db","ref","child","id","toString","set","setState","prevState","prevProps","this","color","style","marginTop","padding","disabled","Icon","name","Label","top","floating","React","Component","FooterWrapper","Footer","openCanvas","Segment","description","Canvas","storage","bkImg","resetCanvas","closeCanvas","height","onSave","blob","imageName","username","isPublic","prompt","window","confirm","Image","src","uploadTimestamp","Date","now","put","then","snapshot","getDownloadURL","imageUrl","snap","timestamp","user","is_public","alert","catch","error","render","canvas","triggerSave","setColor","setLineWidth","zIndex","margin","backgroundColor","border","background","type","onChange","e","target","value","placeholder","min","max","paddingTop","Layout","InnerLayout","App","isCanvasOpen","isEditMode","currentImg","imagesInfo","length","signIn","auth","signInWithRedirect","firebase","GoogleAuthProvider","signOut","switchToPrevImage","setDisplayImageIndex","prevIndex","indexOf","switchToNextImage","nextIndex","currentLocation","imgUrls","openCanvasWithImg","Nft","entityRef","createRef","markerhandler","url","smooth","smoothCount","smoothTolerance","smoothThreshold","data-location","images","map","img","i","displayImageIndex","position","rotation","Scene","locationNames","currentImages","imageUrlsById","dbData","image_urls","locationData","locations","Object","keys","setImages","setImagesInfo","setLocation","loc","AFRAME","registerComponent","init","el","sceneEl","addEventListener","dataset","once","val","push","components","isImagesLoaded","isLocationsLoaded","vr-mode-ui","renderer","embedded","arjs","hiroMarker","alt","crossOrigin","camera","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Root","index","onAuthStateChanged","ReactDOM","document","getElementById"],"mappings":"0eAGA,IAAMA,EAAqBC,YAAOC,IAAPD,CAAH,KAoBTE,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAAjB,OAClB,eAACL,EAAD,WACE,cAACE,EAAA,EAAKI,OAAN,CAAaC,MAAO,EAApB,SACE,cAACC,EAAA,EAAD,CAAQC,KAAK,aAAaC,QAASN,EAAcO,UAAQ,MAE3D,cAACT,EAAA,EAAKI,OAAN,CAAaC,MAAO,KACpB,cAACL,EAAA,EAAKI,OAAN,CAAaC,MAAO,EAApB,SACE,cAACC,EAAA,EAAD,CAAQC,KAAK,cAAcC,QAASL,EAAcM,UAAQ,U,iCCgCjDC,E,4MA9CbC,MAAQ,CACNC,MAAO,EAAKC,MAAMC,MAAMF,OAAS,EACjCG,WAAW,G,EAabC,KAAO,WAAO,IAAD,EACqB,EAAKH,MAA7BI,EADG,EACHA,SAAUH,EADP,EACOA,MADP,EACcI,GACtBC,IAAI,aAAeF,GACnBG,MAAMN,EAAMO,GAAGC,YACfF,MAAM,SACNG,IAAIT,EAAMF,MAAQE,EAAMF,MAAQ,EAAI,GACvC,EAAKY,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZb,MAAOa,EAAUb,MAAQ,EACzBG,WAAW,Q,iEAnBIW,GAEfA,EAAUZ,OACVa,KAAKd,MAAMC,OACXY,EAAUZ,QAAUa,KAAKd,MAAMC,OAE/Ba,KAAKH,SAAS,CAAEZ,MAAOe,KAAKd,MAAMC,MAAMF,OAAS,EAAGG,WAAW,M,+BAiBzD,IAAD,EACsBY,KAAKhB,MAA1BC,EADD,EACCA,MAAOG,EADR,EACQA,UACf,OACE,eAACT,EAAA,EAAD,CACEsB,MAAM,MACNC,MAAO,CAAEC,UAAW,SAAUC,QAAS,6BACvCvB,QAASmB,KAAKX,KACdgB,SAAUjB,EAJZ,UAME,cAACkB,EAAA,EAAD,CAAMC,KAAK,UACX,cAACC,EAAA,EAAD,CAAON,MAAO,CAAEO,IAAK,QAAUC,UAAQ,EAAvC,SACGzB,W,GAxCc0B,IAAMC,W,yJCC/B,IAAMC,EAAgBzC,YAAOC,IAAPD,CAAH,KAsCJ0C,EA9BA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,SAAUH,EAAb,EAAaA,MAAO4B,EAApB,EAAoBA,WAAYxB,EAAhC,EAAgCA,GAAhC,OACb,eAACsB,EAAD,WACE,cAACxC,EAAA,EAAKI,OAAN,CAAaC,MAAO,EAAGwB,MAAO,CAAEE,QAAS,QAAzC,SACE,eAACY,EAAA,EAAD,WACE,6BAAK7B,EAAMoB,OACX,4BAAIpB,EAAM8B,mBAGd,cAAC5C,EAAA,EAAKI,OAAN,CAAaC,MAAO,EAAGwB,MAAO,CAAEE,QAAS,YAAzC,SACE,cAAC,EAAD,CAAYd,SAAUA,EAAUH,MAAOA,EAAOI,GAAIA,MAEpD,eAAClB,EAAA,EAAKI,OAAN,CAAaC,MAAO,EAAGwB,MAAO,CAAEE,QAAS,QAAzC,UACE,cAACzB,EAAA,EAAD,CACEsB,MAAM,QACNpB,QAASkC,EACTb,MAAO,CAAEE,QAAS,cAAe1B,MAAO,QAH1C,wBAOA,cAACC,EAAA,EAAD,CACEsB,MAAM,SACNpB,QAASkC,EACTb,MAAO,CAAEE,QAAS,cAAe1B,MAAO,QAH1C,kC,QCyESwC,EArGA,SAAC,GAAgE,IAA9D3B,EAA6D,EAA7DA,GAAI4B,EAAyD,EAAzDA,QAAS7B,EAAgD,EAAhDA,SAAU8B,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAgD3D,OACE,cAAC,eAAD,CACE5C,MAAO,IACP6C,OAAQ,IACRC,OAnDe,SAACC,GAClB,IAAIC,EAAWT,EAAaU,EAAUC,EACtC,GACED,EAAWE,OAAO,kDACVF,GACV,GACED,EAAYG,OAAO,qCACXH,GACVT,EAAcY,OAAO,+CACrBD,EAAWE,OAAOC,QAChB,kEAEU,IAAIC,OACVC,IAAMR,EACZ,IAAMS,EAAkBC,KAAKC,MAC7BjB,EACG3B,MACAC,MAAM,UAAYiC,GAClBW,IAAIZ,GACJa,MAAK,SAACC,GACL,OAAOA,EAAS/C,IAAIgD,oBAErBF,MAAK,SAACG,GACLlD,EAAGC,IAAI,cACJC,MAAMyC,GACNtC,IAAI6C,GACJH,MAAK,SAACI,GACLnD,EAAGC,IAAI,aACJC,MAAMH,EAAW,IAAM4C,GACvBtC,IAAI,CACHW,KAAMmB,EACNT,YAAaA,EACb0B,UAAWT,EACXU,KAAMjB,EACNkB,UAAWjB,IAEZU,MAAK,SAAUI,GACdI,MAAM,sDACNxB,OAEDyB,OAAM,SAACC,GACNF,MAAME,aAWhB7D,MAAOiC,EACP6B,OAAQ,YAAsD,IAAnDC,EAAkD,EAAlDA,OAAQC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aACxC,OACE,sBAAKnD,MAAO,CAAEoD,OAAQ,QAAtB,UACE,oBAAIpD,MAAO,CAAEqD,OAAQ,OAArB,SAA+BjE,GAAY,SAC3C,qBACEY,MAAO,CACLsD,gBAAiB,mBACjBC,OAAQ,kBAHZ,SAMGP,IAEH,sBAAKhD,MAAO,CAAEE,QAAS,OAAQsD,WAAY,QAA3C,UACE,wCACQ,IACN,uBACEC,KAAK,QACLC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnC7D,MAAO,CAAExB,MAAO,SACf,IANL,QAOQ,IACN,uBACEiF,KAAK,SACLK,YAAY,IACZC,IAAI,IACJC,IAAI,KACJN,SAAU,SAACC,GAAD,OAAOR,EAAaQ,EAAEC,OAAOC,QACvC7D,MAAO,CAAExB,MAAO,YAGpB,sBAAKwB,MAAO,CAAEiE,WAAY,QAA1B,UACE,cAACxF,EAAA,EAAD,CAAQsB,MAAM,MAAMrB,KAAK,QAAQC,QAASyC,IAC1C,cAAC3C,EAAA,EAAD,CAAQsB,MAAM,SAASpB,QAASwC,EAAhC,mBAGA,cAAC1C,EAAA,EAAD,CAAQsB,MAAM,QAAQpB,QAASsE,EAA/B,iC,oRCnFhB,IAAMiB,EAAShG,YAAO,MAAPA,CAAH,KAQNiG,EAAcjG,YAAO,MAAPA,CAAH,KA6HFkG,E,4MAtHbtF,MAAQ,CACNuF,cAAc,EACdC,YAAY,EACZC,WACE,EAAKvF,MAAMwF,YACX,EAAKxF,MAAMwF,WAAWC,QACtB,EAAKzF,MAAMwF,WAAW,I,EAgB1BE,OAAS,WACP,IACE,EAAK1F,MAAM2F,KAAKC,mBACd,IAAIC,IAASF,KAAKG,oBAEpB,MAAOnB,GACPf,MAAMe,K,EAIVoB,QAAU,WACR,IACE,EAAK/F,MAAM2F,KAAKI,UAChB,MAAOpB,GACPf,MAAMe,K,EAIVqB,kBAAoB,WAAO,IAAD,EACqB,EAAKhG,MAA1CwF,EADgB,EAChBA,WAAYS,EADI,EACJA,qBACZV,EAAe,EAAKzF,MAApByF,WACFW,EAC+B,IAAnCV,EAAWW,QAAQZ,GACfC,EAAWC,OAAS,EACpBD,EAAWW,QAAQZ,GAAc,EACvC,EAAK5E,SAAS,CACZ4E,WAAYC,EAAWU,KAEzBD,EAAqBC,I,EAGvBE,kBAAoB,WAAO,IAAD,EACqB,EAAKpG,MAA1CwF,EADgB,EAChBA,WAAYS,EADI,EACJA,qBACZV,EAAe,EAAKzF,MAApByF,WACFc,EACJb,EAAWW,QAAQZ,GAAc,IAAMC,EAAWC,OAC9C,EACAD,EAAWW,QAAQZ,GAAc,EACvC,EAAK5E,SAAS,CACZ4E,WAAYC,EAAWa,KAEzBJ,EAAqBI,I,EAGvBlE,YAAc,WACZ,EAAKxB,SAAS,CAAE0E,cAAc,IAAS,kBACrC,EAAK1E,SAAS,CAAE0E,cAAc,Q,iEA3DfxE,GAEfC,KAAKd,MAAMwF,YACX3E,EAAU2E,aAAe1E,KAAKd,MAAMwF,aAEhC1E,KAAKd,MAAMwF,WAAWC,OAAS,EACjC3E,KAAKH,SAAS,CAAE4E,WAAYzE,KAAKd,MAAMwF,WAAW,KAElD1E,KAAKH,SAAS,CAAE4E,WAAY,U,+BAuDxB,IAAD,SAC2CzE,KAAKd,MAA/CsG,EADD,EACCA,gBAAiBjG,EADlB,EACkBA,GAAI4B,EADtB,EACsBA,QAASsE,EAD/B,EAC+BA,QAD/B,EAE0CzF,KAAKhB,MAA9CuF,EAFD,EAECA,aAAcE,EAFf,EAEeA,WAAYD,EAF3B,EAE2BA,WAClC,OACE,cAACJ,EAAD,UACE,eAACC,EAAD,WACGE,GACC,cAAC,EAAD,CACEjF,SAAUkG,EACVpE,MAAOqE,EAAUA,EAAQhB,EAAW/E,IAAM,KAC1C8E,WAAYA,EACZjF,GAAIA,EACJ4B,QAASA,EACTE,YAAarB,KAAKqB,YAClBC,YAAa,kBACX,EAAKzB,SAAS,CAAE0E,cAAc,EAAOC,YAAY,OAKtDC,IAAeF,GACd,cAAC,EAAD,CACEhG,aAAcyB,KAAKkF,kBACnB1G,aAAcwB,KAAKsF,oBAItBb,IAAeF,GACd,cAAC,EAAD,CACEjF,SAAUkG,EACVrG,MAAOsF,EACP1D,WAAY,kBACV,EAAKlB,SAAS,CAAE0E,cAAc,EAAMC,YAAY,KAElDkB,kBAAmB,kBACjB,EAAK7F,SAAS,CAAE0E,cAAc,EAAMC,YAAY,KAElDjF,GAAIA,a,GA9GAoB,IAAMC,WCgBT+E,E,kDApCb,WAAYzG,GAAQ,IAAD,8BACjB,cAAMA,IACD0G,UAAYjF,IAAMkF,YAFN,E,qDAKT,IAAD,OACP,OACE,uBACEC,eAAa,EACbnC,KAAK,MACLoC,IACE,6DACA/F,KAAKd,MAAMI,SAEb0G,OAAO,OACPC,YAAY,KACZC,gBAAgB,MAChBC,gBAAgB,IAChBzG,GAAG,QACH0G,gBAAepG,KAAKd,MAAMI,SAZ5B,SAcGU,KAAKd,MAAMmH,OAAOC,KAAI,SAACC,EAAKC,GAAN,OACrB,yBACEvE,IAAK,IAAMsE,EAAI7G,GACfhB,MAAO8H,IAAM,EAAKtH,MAAMuH,kBAAoB,IAAM,EAClDlF,OAAQiF,IAAM,EAAKtH,MAAMuH,kBAAoB,IAAM,EACnDC,SAAS,WACTC,SAAS,WACJJ,EAAI7G,a,GA7BHiB,IAAMC,WCFT,MAA0B,wCC6G1BgG,G,0NAtGb5H,MAAQ,CACN6H,cAAe,GACfrB,gBAAiB,GACjBsB,cAAe,GACfC,cAAe,I,uMAIQ/G,KAAKd,MAApBK,E,EAAAA,GAAIyH,E,EAAAA,OACND,EAAgBC,EAAOC,WACvBC,EAAeF,EAAOG,UAC5BnH,KAAKH,SAAS,CACZkH,cAAeA,EACfF,cAAeO,OAAOC,KAAKH,KAGvBI,EAAY,SAACjB,GACjB,EAAKxG,SAAS,CAAEiH,cAAeT,IAC/B,EAAKnH,MAAMqI,cAAclB,IAErBmB,EAAc,SAACC,GACnB,EAAK5H,SAAS,CAAE2F,gBAAiBiC,IACjC,EAAKvI,MAAMsI,YAAYC,IAGzB3F,OAAO4F,OAAOC,kBAAkB,gBAAiB,CAC/CC,KAAM,WACJ5H,KAAK6H,GAAGC,QAAQC,iBAAiB,eAAe,SAAClE,GAC/C,IAAM2B,EAAkB3B,EAAEC,OAAOkE,QAAQ1I,SACzCkI,EAAYhC,GACZjG,EAAGC,IAAI,aACJC,MAAM+F,GACNyC,KAAK,SAAS,SAACvF,GACd,IAAIoE,EAAgB,GACdT,EAAS3D,EAAKwF,MACpB,IAAK,IAAIxI,KAAM2G,EACbS,EAAcqB,KAAd,2BAAwB9B,EAAO3G,IAA/B,IAAoCA,GAAIA,KAE1C4H,EAAUR,SAIhB9G,KAAK6H,GAAGC,QAAQC,iBAAiB,cAAc,SAAClE,GAAD,OAAOyD,EAAU,U,0JAM7DxF,OAAO4F,OAAOU,WAAWtC,gB,+BAGxB,IAAD,SAMH9F,KAAKhB,MAJP6H,EAFK,EAELA,cACArB,EAHK,EAGLA,gBACAsB,EAJK,EAILA,cACAC,EALK,EAKLA,cAEIsB,EAAiBjB,OAAOC,KAAKN,GAAepC,OAAS,EACrD2D,EAAoBzB,EAAclC,OAAS,EACjD,OACE,0BACEjF,GAAG,UACH6I,aAAW,kBACXC,SAAS,gCACTC,UAAQ,EACRC,KAAK,kEALP,UAOGL,GACC,qCACE,qBAAK3I,GAAG,aAAauC,IAAK0G,EAAYC,IAAI,eACzCxB,OAAOC,KAAKN,GAAeT,KAAI,SAAC5G,GAAD,OAC9B,qBAEEA,GAAIA,EACJuC,IAAK8E,EAAcrH,GACnBkJ,IAAKlJ,EACLmJ,YAAY,aAJPnJ,SASZ2I,GACCC,GACAzB,EAAcP,KAAI,SAAC/F,GAAD,OAChB,cAAC,EAAD,CAEEjB,SAAUiB,EACV8F,OACEb,IAAoBjF,GAAQuG,EAAcnC,OAAS,EAC/CmC,EACA,GAENL,kBAAmB,EAAKvH,MAAMuH,mBAPzBlG,MAUX,0BAAUuI,QAAM,W,GAjGJnI,IAAMC,YCEpBmI,G,OAAchE,IAASiE,cAAc,CACzCC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,kBAGX3E,EAAOkE,EAAYlE,OACnB4E,EAAWV,EAAYU,WACvBtI,EAAU4H,EAAY5H,UAEtBuI,E,4MACJ1K,MAAQ,CACN0F,WAAY,KACZc,gBAAiB,KACjB5C,KAAM,UACN6D,kBAAmB,EACnBO,OAAQ,M,EAeVO,cAAgB,SAAClB,GAAD,OAAY,EAAKxG,SAAS,CAAE6E,WAAY2B,K,EACxDmB,YAAc,SAACC,GAAD,OAAS,EAAK5H,SAAS,CAAE2F,gBAAiBiC,K,EACxDtC,qBAAuB,SAACwE,GAAD,OAAW,EAAK9J,SAAS,CAAE4G,kBAAmBkD,K,gMAbnE9E,EAAK+E,oBAAmB,SAAChH,GACnBA,EACF,EAAK/C,SAAS,CAAE+C,SAEhB,EAAK/C,SAAS,CAAE+C,KAAM,U,SAGL6G,EAASjK,MAAMyI,KAAK,S,OAAnCjB,E,OACNhH,KAAKH,SAAS,CAAEmH,OAAQA,EAAOkB,Q,qIAQ/B,OACE,sBAAKhI,MAAO,CAAExB,MAAO,OAAQ6C,OAAQ,QAArC,UACGvB,KAAKhB,MAAMgI,QACV,cAAC,EAAD,CACEzH,GAAIkK,EACJtI,QAASA,EACT6F,OAAQhH,KAAKhB,MAAMgI,OACnBO,cAAevH,KAAKuH,cACpBC,YAAaxH,KAAKwH,YAClBf,kBAAmBzG,KAAKhB,MAAMyH,oBAGlC,cAAC,EAAD,CACE/B,WAAY1E,KAAKhB,MAAM0F,WACvBc,gBAAiBxF,KAAKhB,MAAMwG,gBAC5BX,KAAMA,EACNjC,KAAM5C,KAAKhB,MAAM4D,KACjBrD,GAAIkK,EACJtI,QAASA,EACTsE,QAASzF,KAAKhB,MAAMgI,QAAUhH,KAAKhB,MAAMgI,OAAOC,WAChD9B,qBAAsBnF,KAAKmF,8B,GA9ClBxE,IAAMC,WAqDzBiJ,IAAS5G,OAAO,cAAC,EAAD,IAAU6G,SAASC,eAAe,W","file":"static/js/main.d2ca1050.chunk.js","sourcesContent":["import { Button, Grid } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst ImageSwitchWrapper = styled(Grid)`\n  position: absolute;\n  left: 0;\n  top: 45%;\n  width: 95%;\n  height: 5%;\n`;\n\nconst ImageSwitch = ({ switchToPrev, switchToNext }) => (\n  <ImageSwitchWrapper>\n    <Grid.Column width={1}>\n      <Button icon=\"angle left\" onClick={switchToPrev} circular />\n    </Grid.Column>\n    <Grid.Column width={13}></Grid.Column>\n    <Grid.Column width={1}>\n      <Button icon=\"angle right\" onClick={switchToNext} circular />\n    </Grid.Column>\n  </ImageSwitchWrapper>\n);\n\nexport default ImageSwitch;\n","import React from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\n\nclass LikeButton extends React.Component {\n  state = {\n    likes: this.props.image.likes || 0,\n    isClicked: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.image &&\n      this.props.image &&\n      prevProps.image !== this.props.image\n    ) {\n      this.setState({ likes: this.props.image.likes || 0, isClicked: false });\n    }\n  }\n\n  like = () => {\n    const { location, image, db } = this.props;\n    db.ref(\"locations/\" + location)\n      .child(image.id.toString())\n      .child(\"likes\")\n      .set(image.likes ? image.likes + 1 : 1);\n    this.setState((prevState) => ({\n      ...prevState,\n      likes: prevState.likes + 1,\n      isClicked: true,\n    }));\n  };\n\n  render() {\n    const { likes, isClicked } = this.state;\n    return (\n      <Button\n        color=\"red\"\n        style={{ marginTop: \"1.5rem\", padding: \"0.8rem 0.3rem 0.6rem 1rem\" }}\n        onClick={this.like}\n        disabled={isClicked}\n      >\n        <Icon name=\"heart\" />\n        <Label style={{ top: \"1rem\" }} floating>\n          {likes}\n        </Label>\n      </Button>\n    );\n  }\n}\n\nexport default LikeButton;\n","import { Button, Grid, Segment } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport LikeButton from \"./LikeButton\";\n\nconst FooterWrapper = styled(Grid)`\n  position: absolute;\n  left: 0;\n  bottom: 0%;\n  width: 100%;\n  height: 15%;\n`;\n\nconst Footer = ({ location, image, openCanvas, db }) => (\n  <FooterWrapper>\n    <Grid.Column width={8} style={{ padding: \"1rem\" }}>\n      <Segment>\n        <h4>{image.name}</h4>\n        <p>{image.description}</p>\n      </Segment>\n    </Grid.Column>\n    <Grid.Column width={2} style={{ padding: \"1rem 0px\" }}>\n      <LikeButton location={location} image={image} db={db} />\n    </Grid.Column>\n    <Grid.Column width={6} style={{ padding: \"1rem\" }}>\n      <Button\n        color=\"green\"\n        onClick={openCanvas}\n        style={{ padding: \"1rem 0.2rem\", width: \"100%\" }}\n      >\n        Create new\n      </Button>\n      <Button\n        color=\"orange\"\n        onClick={openCanvas}\n        style={{ padding: \"1rem 0.2rem\", width: \"100%\" }}\n      >\n        Paint on this\n      </Button>\n    </Grid.Column>\n  </FooterWrapper>\n);\n\nexport default Footer;\n","import { Button } from \"semantic-ui-react\";\nimport { ReactPainter } from \"react-painter\";\n\nconst Canvas = ({ db, storage, location, bkImg, resetCanvas, closeCanvas }) => {\n  const saveCanvas = (blob) => {\n    var imageName, description, username, isPublic;\n    do {\n      username = prompt(\"What's your name? Any nickname is fine!\");\n    } while (!username);\n    do {\n      imageName = prompt(\"Please name your painting:\");\n    } while (!imageName);\n    description = prompt(\"Please write something about this painting:\");\n    isPublic = window.confirm(\n      \"Do you allow other users create paintings basing on this one?\"\n    );\n    var image = new Image();\n    image.src = blob;\n    const uploadTimestamp = Date.now();\n    storage\n      .ref()\n      .child(\"images/\" + imageName)\n      .put(blob)\n      .then((snapshot) => {\n        return snapshot.ref.getDownloadURL();\n      })\n      .then((imageUrl) => {\n        db.ref(\"image_urls\")\n          .child(uploadTimestamp)\n          .set(imageUrl)\n          .then((snap) => {\n            db.ref(\"locations\")\n              .child(location + \"/\" + uploadTimestamp)\n              .set({\n                name: imageName,\n                description: description,\n                timestamp: uploadTimestamp,\n                user: username,\n                is_public: isPublic,\n              })\n              .then(function (snap) {\n                alert(\"Uploaded! Refresh the page to see your materpiece!\");\n                closeCanvas();\n              })\n              .catch((error) => {\n                alert(error);\n              });\n          });\n      });\n  };\n\n  return (\n    <ReactPainter\n      width={375}\n      height={500}\n      onSave={saveCanvas}\n      image={bkImg}\n      render={({ canvas, triggerSave, setColor, setLineWidth }) => {\n        return (\n          <div style={{ zIndex: \"1000\" }}>\n            <h2 style={{ margin: \"0px\" }}>{location || \"none\"}</h2>\n            <div\n              style={{\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                border: \"5px solid #666\",\n              }}\n            >\n              {canvas}\n            </div>\n            <div style={{ padding: \"1rem\", background: \"#ccc\" }}>\n              <div>\n                Color{\" \"}\n                <input\n                  type=\"color\"\n                  onChange={(e) => setColor(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />{\" \"}\n                Width{\" \"}\n                <input\n                  type=\"number\"\n                  placeholder=\"5\"\n                  min=\"1\"\n                  max=\"20\"\n                  onChange={(e) => setLineWidth(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />\n              </div>\n              <div style={{ paddingTop: \"1rem\" }}>\n                <Button color=\"red\" icon=\"close\" onClick={closeCanvas} />\n                <Button color=\"orange\" onClick={resetCanvas}>\n                  Reset\n                </Button>\n                <Button color=\"green\" onClick={triggerSave}>\n                  Save!!\n                </Button>\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default Canvas;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase/app\";\nimport ImageSwitch from \"./ImageSwitch\";\nimport Footer from \"./Footer\";\nimport Canvas from \"./Canvas\";\n\nconst Layout = styled(\"div\")`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 90%;\n`;\n\nconst InnerLayout = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nclass App extends React.Component {\n  state = {\n    isCanvasOpen: false,\n    isEditMode: false,\n    currentImg:\n      this.props.imagesInfo &&\n      this.props.imagesInfo.length &&\n      this.props.imagesInfo[0],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.imagesInfo &&\n      prevProps.imagesInfo !== this.props.imagesInfo\n    ) {\n      if (this.props.imagesInfo.length > 0) {\n        this.setState({ currentImg: this.props.imagesInfo[0] });\n      } else {\n        this.setState({ currentImg: null });\n      }\n    }\n  }\n\n  signIn = () => {\n    try {\n      this.props.auth.signInWithRedirect(\n        new firebase.auth.GoogleAuthProvider()\n      );\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  signOut = () => {\n    try {\n      this.props.auth.signOut();\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  switchToPrevImage = () => {\n    const { imagesInfo, setDisplayImageIndex } = this.props;\n    const { currentImg } = this.state;\n    const prevIndex =\n      imagesInfo.indexOf(currentImg) === 0\n        ? imagesInfo.length - 1\n        : imagesInfo.indexOf(currentImg) - 1;\n    this.setState({\n      currentImg: imagesInfo[prevIndex],\n    });\n    setDisplayImageIndex(prevIndex);\n  };\n\n  switchToNextImage = () => {\n    const { imagesInfo, setDisplayImageIndex } = this.props;\n    const { currentImg } = this.state;\n    const nextIndex =\n      imagesInfo.indexOf(currentImg) + 1 === imagesInfo.length\n        ? 0\n        : imagesInfo.indexOf(currentImg) + 1;\n    this.setState({\n      currentImg: imagesInfo[nextIndex],\n    });\n    setDisplayImageIndex(nextIndex);\n  };\n\n  resetCanvas = () => {\n    this.setState({ isCanvasOpen: false }, () =>\n      this.setState({ isCanvasOpen: true })\n    );\n  };\n\n  render() {\n    const { currentLocation, db, storage, imgUrls } = this.props;\n    const { isCanvasOpen, currentImg, isEditMode } = this.state;\n    return (\n      <Layout>\n        <InnerLayout>\n          {isCanvasOpen && (\n            <Canvas\n              location={currentLocation}\n              bkImg={imgUrls ? imgUrls[currentImg.id] : null}\n              isEditMode={isEditMode}\n              db={db}\n              storage={storage}\n              resetCanvas={this.resetCanvas}\n              closeCanvas={() =>\n                this.setState({ isCanvasOpen: false, isEditMode: false })\n              }\n            />\n          )}\n\n          {currentImg && !isCanvasOpen && (\n            <ImageSwitch\n              switchToPrev={this.switchToPrevImage}\n              switchToNext={this.switchToNextImage}\n            />\n          )}\n\n          {currentImg && !isCanvasOpen && (\n            <Footer\n              location={currentLocation}\n              image={currentImg}\n              openCanvas={() =>\n                this.setState({ isCanvasOpen: true, isEditMode: false })\n              }\n              openCanvasWithImg={() =>\n                this.setState({ isCanvasOpen: true, isEditMode: true })\n              }\n              db={db}\n            />\n          )}\n        </InnerLayout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nclass Nft extends React.Component {\n  constructor(props) {\n    super(props);\n    this.entityRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <a-nft\n        markerhandler\n        type=\"nft\"\n        url={\n          \"https://yhhaoareyou.github.io/campus-coloring/descriptors/\" +\n          this.props.location\n        }\n        smooth=\"true\"\n        smoothCount=\"10\"\n        smoothTolerance=\".01\"\n        smoothThreshold=\"5\"\n        id=\"a-nft\"\n        data-location={this.props.location}\n      >\n        {this.props.images.map((img, i) => (\n          <a-image\n            src={\"#\" + img.id}\n            width={i === this.props.displayImageIndex ? 375 : 0}\n            height={i === this.props.displayImageIndex ? 500 : 0}\n            position=\"22 0 -50\"\n            rotation=\"-90 0 0\"\n            key={img.id}\n          ></a-image>\n        ))}\n      </a-nft>\n    );\n  }\n}\n\nexport default Nft;\n","export default __webpack_public_path__ + \"static/media/hiro-marker.81a8bff1.png\";","import React from \"react\";\nimport Nft from \"./Nft\";\nimport hiroMarker from \"./img/hiro-marker.png\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nclass Scene extends React.Component {\n  state = {\n    locationNames: [],\n    currentLocation: \"\",\n    currentImages: [],\n    imageUrlsById: {},\n  };\n\n  async componentDidMount() {\n    const { db, dbData } = this.props;\n    const imageUrlsById = dbData.image_urls;\n    const locationData = dbData.locations;\n    this.setState({\n      imageUrlsById: imageUrlsById,\n      locationNames: Object.keys(locationData),\n    });\n\n    const setImages = (images) => {\n      this.setState({ currentImages: images });\n      this.props.setImagesInfo(images);\n    };\n    const setLocation = (loc) => {\n      this.setState({ currentLocation: loc });\n      this.props.setLocation(loc);\n    };\n\n    window.AFRAME.registerComponent(\"markerhandler\", {\n      init: function () {\n        this.el.sceneEl.addEventListener(\"markerFound\", (e) => {\n          const currentLocation = e.target.dataset.location;\n          setLocation(currentLocation);\n          db.ref(\"locations\")\n            .child(currentLocation)\n            .once(\"value\", (snap) => {\n              var currentImages = [];\n              const images = snap.val();\n              for (var id in images) {\n                currentImages.push({ ...images[id], id: id });\n              }\n              setImages(currentImages);\n            });\n        });\n\n        this.el.sceneEl.addEventListener(\"markerLost\", (e) => setImages([]));\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    delete window.AFRAME.components.markerhandler;\n  }\n\n  render() {\n    const {\n      locationNames,\n      currentLocation,\n      currentImages,\n      imageUrlsById,\n    } = this.state;\n    const isImagesLoaded = Object.keys(imageUrlsById).length > 0;\n    const isLocationsLoaded = locationNames.length > 0;\n    return (\n      <a-scene\n        id=\"a-scene\"\n        vr-mode-ui=\"enabled: false;\"\n        renderer=\"logarithmicDepthBuffer: true;\"\n        embedded\n        arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n      >\n        {isImagesLoaded && (\n          <a-assets>\n            <img id=\"hiroMarker\" src={hiroMarker} alt=\"hiroMarker\" />\n            {Object.keys(imageUrlsById).map((id) => (\n              <img\n                key={id}\n                id={id}\n                src={imageUrlsById[id]}\n                alt={id}\n                crossOrigin=\"anonymous\"\n              />\n            ))}\n          </a-assets>\n        )}\n        {isImagesLoaded &&\n          isLocationsLoaded &&\n          locationNames.map((name) => (\n            <Nft\n              key={name}\n              location={name}\n              images={\n                currentLocation === name && currentImages.length > 0\n                  ? currentImages\n                  : []\n              }\n              displayImageIndex={this.props.displayImageIndex}\n            />\n          ))}\n        <a-entity camera></a-entity>\n      </a-scene>\n    );\n  }\n}\n\nexport default Scene;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Scene from \"./Scene\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\nconst auth = firebaseApp.auth();\nconst database = firebaseApp.database();\nconst storage = firebaseApp.storage();\n\nclass Root extends React.Component {\n  state = {\n    imagesInfo: null,\n    currentLocation: null,\n    user: \"loading\",\n    displayImageIndex: 0,\n    dbData: null,\n  };\n\n  async componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n    const dbData = await database.ref().once(\"value\");\n    this.setState({ dbData: dbData.val() });\n  }\n\n  setImagesInfo = (images) => this.setState({ imagesInfo: images });\n  setLocation = (loc) => this.setState({ currentLocation: loc });\n  setDisplayImageIndex = (index) => this.setState({ displayImageIndex: index });\n\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        {this.state.dbData && (\n          <Scene\n            db={database}\n            storage={storage}\n            dbData={this.state.dbData}\n            setImagesInfo={this.setImagesInfo}\n            setLocation={this.setLocation}\n            displayImageIndex={this.state.displayImageIndex}\n          />\n        )}\n        <App\n          imagesInfo={this.state.imagesInfo}\n          currentLocation={this.state.currentLocation}\n          auth={auth}\n          user={this.state.user}\n          db={database}\n          storage={storage}\n          imgUrls={this.state.dbData && this.state.dbData.image_urls}\n          setDisplayImageIndex={this.setDisplayImageIndex}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// setTimeout(ReactDOM.render(<App />, document.getElementById(\"root\")), 1500);\n"],"sourceRoot":""}