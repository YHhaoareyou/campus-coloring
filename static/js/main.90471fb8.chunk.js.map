{"version":3,"sources":["ImageSwitch.js","LikeButton.js","Footer.js","Canvas.js","App.js","Nft.js","img/hiro-marker.png","Scene.js","index.js"],"names":["ImageSwitchWrapper","styled","Grid","ImageSwitch","switchToPrev","switchToNext","Column","width","Button","onClick","Icon","name","LikeButton","state","likes","props","image","isClicked","like","location","db","ref","child","id","toString","set","setState","prevState","prevProps","this","color","style","marginTop","padding","disabled","Label","top","floating","React","Component","FooterWrapper","Footer","openCanvas","Segment","description","Canvas","storage","window","innerWidth","height","innerHeight","onSave","blob","imageName","username","isPublic","prompt","confirm","Image","src","uploadTimestamp","Date","now","put","then","snapshot","getDownloadURL","imageUrl","snap","timestamp","user","is_public","alert","catch","error","render","canvas","triggerSave","setColor","setLineWidth","zIndex","margin","backgroundColor","border","background","type","onChange","e","target","value","placeholder","min","max","paddingTop","icon","isCanvasOpen","resetCanvas","Layout","InnerLayout","Topbar","App","currentImg","imagesInfo","length","signIn","auth","signInWithRedirect","firebase","GoogleAuthProvider","signOut","switchToPrevImage","setDisplayImageIndex","prevIndex","indexOf","switchToNextImage","nextIndex","currentLocation","displayName","Nft","entityRef","createRef","markerhandler","url","smooth","smoothCount","smoothTolerance","smoothThreshold","data-location","images","map","img","i","displayImageIndex","position","rotation","Scene","locationNames","currentImages","imageUrlsById","once","dbData","val","image_urls","locationData","locations","Object","keys","setImages","setImagesInfo","setLocation","loc","AFRAME","registerComponent","init","el","sceneEl","addEventListener","dataset","push","components","isImagesLoaded","isLocationsLoaded","vr-mode-ui","renderer","embedded","arjs","hiroMarker","alt","crossOrigin","camera","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","Root","index","onAuthStateChanged","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90471fb8.chunk.js","sourcesContent":["import { Button, Grid, Icon } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\n\nconst ImageSwitchWrapper = styled(Grid)`\n  position: absolute;\n  left: 0;\n  top: 45%;\n  width: 100%;\n  height: 5%;\n`;\n\nconst ImageSwitch = ({ switchToPrev, switchToNext }) => (\n  <ImageSwitchWrapper>\n    <Grid.Column width={1}>\n      <Button onClick={switchToPrev}>\n        <Icon name=\"angle left\" />\n      </Button>\n    </Grid.Column>\n    <Grid.Column width={14}></Grid.Column>\n    <Grid.Column width={1}>\n      <Button onClick={switchToNext}>\n        <Icon name=\"angle right\" />\n      </Button>\n    </Grid.Column>\n  </ImageSwitchWrapper>\n);\n\nexport default ImageSwitch;\n","import React from \"react\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\n\nclass LikeButton extends React.Component {\n  state = {\n    likes: this.props.image.likes || 0,\n    isClicked: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.image &&\n      this.props.image &&\n      prevProps.image !== this.props.image\n    ) {\n      this.setState({ likes: this.props.image.likes || 0, isClicked: false });\n    }\n  }\n\n  like = () => {\n    const { location, image, db } = this.props;\n    db.ref(\"locations/\" + location)\n      .child(image.id.toString())\n      .child(\"likes\")\n      .set(image.likes ? image.likes + 1 : 1);\n    this.setState((prevState) => ({\n      ...prevState,\n      likes: prevState.likes + 1,\n      isClicked: true,\n    }));\n  };\n\n  render() {\n    const { likes, isClicked } = this.state;\n    return (\n      <Button\n        color=\"red\"\n        style={{ marginTop: \"1.5rem\", padding: \"0.8rem 0.3rem 0.6rem 1rem\" }}\n        onClick={this.like}\n        disabled={isClicked}\n      >\n        <Icon name=\"heart\" />\n        <Label style={{ top: \"1rem\" }} floating>\n          {likes}\n        </Label>\n      </Button>\n    );\n  }\n}\n\nexport default LikeButton;\n","import { Button, Grid, Segment } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport LikeButton from \"./LikeButton\";\n\nconst FooterWrapper = styled(Grid)`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 15%;\n`;\n\nconst Footer = ({ location, image, openCanvas, db }) => (\n  <FooterWrapper>\n    <Grid.Column width={8} style={{ padding: \"1rem\" }}>\n      <Segment>\n        <h4>{image.name}</h4>\n        <p>{image.description}</p>\n      </Segment>\n    </Grid.Column>\n    <Grid.Column width={2} style={{ padding: \"1rem 0px\" }}>\n      <LikeButton location={location} image={image} db={db} />\n    </Grid.Column>\n    <Grid.Column width={6} style={{ padding: \"1rem\" }}>\n      <Button\n        color=\"green\"\n        onClick={openCanvas}\n        style={{ padding: \"1rem 0.2rem\", width: \"100%\" }}\n      >\n        Create new\n      </Button>\n      <Button\n        color=\"orange\"\n        onClick={openCanvas}\n        disabled\n        style={{ padding: \"1rem 0.2rem\", width: \"100%\" }}\n      >\n        Paint on this\n      </Button>\n    </Grid.Column>\n  </FooterWrapper>\n);\n\nexport default Footer;\n","import { Button } from \"semantic-ui-react\";\nimport { ReactPainter } from \"react-painter\";\n\nconst Canvas = ({ db, storage, location }) => {\n  const saveCanvas = (blob) => {\n    var imageName, description, username, isPublic;\n    do {\n      username = prompt(\"What's your name? Any nickname is fine!\");\n    } while (!username);\n    do {\n      imageName = prompt(\"Please name your painting:\");\n    } while (!imageName);\n    description = prompt(\"Please write something about this painting:\");\n    isPublic = window.confirm(\n      \"Do you allow other users create paintings basing on this one?\"\n    );\n    var image = new Image();\n    image.src = blob;\n    const uploadTimestamp = Date.now();\n    storage\n      .ref()\n      .child(\"images/\" + imageName)\n      .put(blob)\n      .then((snapshot) => {\n        return snapshot.ref.getDownloadURL();\n      })\n      .then((imageUrl) => {\n        db.ref(\"image_urls\")\n          .child(uploadTimestamp)\n          .set(imageUrl)\n          .then((snap) => {\n            db.ref(\"locations\")\n              .child(location + \"/\" + uploadTimestamp)\n              .set({\n                name: imageName,\n                description: description,\n                timestamp: uploadTimestamp,\n                user: username,\n                is_public: isPublic,\n              })\n              .then(function (snap) {\n                alert(\"Uploaded! Refresh the page to see your materpiece!\");\n              })\n              .catch((error) => {\n                alert(error);\n              });\n          });\n      });\n  };\n\n  return (\n    <ReactPainter\n      width={window.innerWidth}\n      height={window.innerHeight * 0.8}\n      onSave={saveCanvas}\n      render={({ canvas, triggerSave, setColor, setLineWidth }) => {\n        return (\n          <div style={{ zIndex: \"1000\" }}>\n            <h2 style={{ margin: \"0px\" }}>{location || \"none\"}</h2>\n            <div\n              style={{\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                border: \"5px solid #666\",\n              }}\n            >\n              {canvas}\n            </div>\n            <div style={{ padding: \"1rem\", background: \"#ccc\" }}>\n              <div>\n                Color{\" \"}\n                <input\n                  type=\"color\"\n                  onChange={(e) => setColor(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />{\" \"}\n                Width{\" \"}\n                <input\n                  type=\"number\"\n                  placeholder=\"5\"\n                  min=\"1\"\n                  max=\"20\"\n                  onChange={(e) => setLineWidth(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />\n              </div>\n              <div style={{ paddingTop: \"1rem\" }}>\n                <Button\n                  color=\"red\"\n                  icon=\"close\"\n                  onClick={() => this.setState({ isCanvasOpen: false })}\n                />\n                <Button color=\"orange\" onClick={this.resetCanvas}>\n                  Reset\n                </Button>\n                <Button color=\"green\" onClick={triggerSave}>\n                  Save!!\n                </Button>\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default Canvas;\n","import React from \"react\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport firebase from \"firebase/app\";\nimport ImageSwitch from \"./ImageSwitch\";\nimport Footer from \"./Footer\";\nimport Canvas from \"./Canvas\";\n\nconst Layout = styled(\"div\")`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst InnerLayout = styled(\"div\")`\n  position: relative;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Topbar = styled(\"div\")`\n  width: 100%;\n  text-align: center;\n`;\n\nclass App extends React.Component {\n  state = {\n    isCanvasOpen: false,\n    currentImg:\n      this.props.imagesInfo &&\n      this.props.imagesInfo.length &&\n      this.props.imagesInfo[0],\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.imagesInfo &&\n      prevProps.imagesInfo !== this.props.imagesInfo\n    ) {\n      if (this.props.imagesInfo.length > 0) {\n        this.setState({ currentImg: this.props.imagesInfo[0] });\n      } else {\n        this.setState({ currentImg: null });\n      }\n    }\n  }\n\n  signIn = () => {\n    try {\n      this.props.auth.signInWithRedirect(\n        new firebase.auth.GoogleAuthProvider()\n      );\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  signOut = () => {\n    try {\n      this.props.auth.signOut();\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  switchToPrevImage = () => {\n    const { imagesInfo, setDisplayImageIndex } = this.props;\n    const { currentImg } = this.state;\n    const prevIndex =\n      imagesInfo.indexOf(currentImg) === 0\n        ? imagesInfo.length - 1\n        : imagesInfo.indexOf(currentImg) - 1;\n    this.setState({\n      currentImg: imagesInfo[prevIndex],\n    });\n    setDisplayImageIndex(prevIndex);\n  };\n\n  switchToNextImage = () => {\n    const { imagesInfo, setDisplayImageIndex } = this.props;\n    const { currentImg } = this.state;\n    const nextIndex =\n      imagesInfo.indexOf(currentImg) + 1 === imagesInfo.length\n        ? 0\n        : imagesInfo.indexOf(currentImg) + 1;\n    this.setState({\n      currentImg: imagesInfo[nextIndex],\n    });\n    setDisplayImageIndex(nextIndex);\n  };\n\n  resetCanvas = () => {\n    this.setState({ isCanvasOpen: false }, () =>\n      this.setState({ isCanvasOpen: true })\n    );\n  };\n\n  render() {\n    const { user, currentLocation, db, storage } = this.props;\n    const { isCanvasOpen, currentImg } = this.state;\n    return (\n      <Layout>\n        <InnerLayout>\n          <Topbar>\n            {user && user !== \"loading\" && (\n              <span>{user.displayName}, welcome! </span>\n            )}\n            {user ? (\n              user === \"loading\" ? (\n                <h2>Loading...</h2>\n              ) : (\n                <Button onClick={this.signOut}>Sign out</Button>\n              )\n            ) : (\n              <Button onClick={this.signIn}>Sign in</Button>\n            )}\n          </Topbar>\n\n          {isCanvasOpen && (\n            <Canvas location={currentLocation} db={db} storage={storage} />\n          )}\n\n          {currentImg && !isCanvasOpen && (\n            <ImageSwitch\n              switchToPrev={this.switchToPrevImage}\n              switchToNext={this.switchToNextImage}\n            />\n          )}\n\n          {currentImg && !isCanvasOpen && (\n            <Footer\n              location={currentLocation}\n              image={currentImg}\n              openCanvas={() => this.setState({ isCanvasOpen: true })}\n              db={db}\n            />\n          )}\n        </InnerLayout>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nclass Nft extends React.Component {\n  constructor(props) {\n    super(props);\n    this.entityRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // setTimeout(\n    //   () =>\n    //     this.entityRef.current &&\n    //     this.entityRef.current.setAttribute(\"scale\", { x: 2, y: 2, z: 2 }),\n    //   15000\n    // );\n  }\n\n  render() {\n    return (\n      <a-nft\n        markerhandler\n        type=\"nft\"\n        url={\n          \"https://yhhaoareyou.github.io/campus-coloring/descriptors/\" +\n          this.props.location\n        }\n        smooth=\"true\"\n        smoothCount=\"10\"\n        smoothTolerance=\".01\"\n        smoothThreshold=\"5\"\n        id=\"a-nft\"\n        data-location={this.props.location}\n      >\n        {this.props.images.map((img, i) => (\n          <a-image\n            src={\"#\" + img.id}\n            width={i === this.props.displayImageIndex ? 500 : 0}\n            height={i === this.props.displayImageIndex ? 500 : 0}\n            position=\"150 0 0\"\n            rotation=\"-90 0 0\"\n            key={img.id}\n          ></a-image>\n        ))}\n      </a-nft>\n    );\n  }\n}\n\nexport default Nft;\n","export default __webpack_public_path__ + \"static/media/hiro-marker.81a8bff1.png\";","import React from \"react\";\nimport Nft from \"./Nft\";\nimport hiroMarker from \"./img/hiro-marker.png\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nclass Scene extends React.Component {\n  state = {\n    locationNames: [],\n    currentLocation: \"\",\n    currentImages: [],\n    imageUrlsById: {},\n  };\n\n  async componentDidMount() {\n    const { db } = this.props;\n    const dbData = await db.ref().once(\"value\");\n    const imageUrlsById = dbData.val().image_urls;\n    const locationData = dbData.val().locations;\n    this.setState({\n      imageUrlsById: imageUrlsById,\n      locationNames: Object.keys(locationData),\n    });\n\n    const setImages = (images) => {\n      this.setState({ currentImages: images });\n      this.props.setImagesInfo(images);\n    };\n    const setLocation = (loc) => {\n      this.setState({ currentLocation: loc });\n      this.props.setLocation(loc);\n    };\n\n    window.AFRAME.registerComponent(\"markerhandler\", {\n      init: function () {\n        this.el.sceneEl.addEventListener(\"markerFound\", (e) => {\n          const currentLocation = e.target.dataset.location;\n          setLocation(currentLocation);\n          db.ref(\"locations\")\n            .child(currentLocation)\n            .once(\"value\", (snap) => {\n              var currentImages = [];\n              const images = snap.val();\n              for (var id in images) {\n                currentImages.push({ ...images[id], id: id });\n              }\n              setImages(currentImages);\n            });\n        });\n\n        this.el.sceneEl.addEventListener(\"markerLost\", (e) => setImages([]));\n      },\n    });\n  }\n\n  componentWillUnmount() {\n    delete window.AFRAME.components.markerhandler;\n  }\n\n  render() {\n    const {\n      locationNames,\n      currentLocation,\n      currentImages,\n      imageUrlsById,\n    } = this.state;\n    const isImagesLoaded = Object.keys(imageUrlsById).length > 0;\n    const isLocationsLoaded = locationNames.length > 0;\n    return (\n      <a-scene\n        id=\"a-scene\"\n        vr-mode-ui=\"enabled: false;\"\n        renderer=\"logarithmicDepthBuffer: true;\"\n        embedded\n        arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n      >\n        {isImagesLoaded && (\n          <a-assets>\n            <img id=\"hiroMarker\" src={hiroMarker} alt=\"hiroMarker\" />\n            {Object.keys(imageUrlsById).map((id) => (\n              <img\n                key={id}\n                id={id}\n                src={imageUrlsById[id]}\n                alt={id}\n                crossOrigin=\"anonymous\"\n              />\n            ))}\n          </a-assets>\n        )}\n        {isImagesLoaded &&\n          isLocationsLoaded &&\n          locationNames.map((name) => (\n            <Nft\n              key={name}\n              location={name}\n              images={\n                currentLocation === name && currentImages.length > 0\n                  ? currentImages\n                  : []\n              }\n              displayImageIndex={this.props.displayImageIndex}\n            />\n          ))}\n        <a-entity camera></a-entity>\n      </a-scene>\n    );\n  }\n}\n\nexport default Scene;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Scene from \"./Scene\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\nconst auth = firebaseApp.auth();\nconst database = firebaseApp.database();\nconst storage = firebaseApp.storage();\n\nclass Root extends React.Component {\n  state = {\n    imagesInfo: null,\n    currentLocation: null,\n    user: \"loading\",\n    displayImageIndex: 0,\n  };\n\n  componentDidMount() {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  setImagesInfo = (images) => this.setState({ imagesInfo: images });\n  setLocation = (loc) => this.setState({ currentLocation: loc });\n  setDisplayImageIndex = (index) => this.setState({ displayImageIndex: index });\n\n  render() {\n    return (\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <Scene\n          db={database}\n          storage={storage}\n          setImagesInfo={this.setImagesInfo}\n          setLocation={this.setLocation}\n          displayImageIndex={this.state.displayImageIndex}\n        />\n        <App\n          imagesInfo={this.state.imagesInfo}\n          currentLocation={this.state.currentLocation}\n          auth={auth}\n          user={this.state.user}\n          db={database}\n          storage={storage}\n          setDisplayImageIndex={this.setDisplayImageIndex}\n        />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// setTimeout(ReactDOM.render(<App />, document.getElementById(\"root\")), 1500);\n"],"sourceRoot":""}