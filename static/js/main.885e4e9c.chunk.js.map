{"version":3,"sources":["locations.js","LocationsMenu.js","Home.js","ImageSwitch.js","atoms.js","auth.js","NewGraffitiModal.js","EditGraffitiModal.js","ActionMenu.js","Canvas.js","Graffitis.js","notificationMap.js","Header.js","App.js","reportWebVitals.js","Scene.js","index.js","../node_modules/jsdom/lib/jsdom sync"],"names":["locations","garden","nameJA","descriptionJA","nameEN","descriptionEN","range","minLat","maxLat","minLong","maxLong","MapContainer","styled","div","BasePin","i","locationComponentPairs","loc","Pin","LocationsMenu","useTranslation","t","i18n","useState","currentCoor","setCurrentCoor","selectedLoc","setSelectedLoc","retrieveCoorFailed","setRetrieveCoorFailed","handleRetrievingCoor","navigator","geolocation","getCurrentPosition","position","coords","error","useEffect","retrieveCoorTimer","setInterval","clearInterval","isCoorInRange","LocCoorRange","latitude","longitude","style","paddingTop","Alert","variant","margin","className","map","onClick","color","Modal","centered","show","onHide","Header","closeButton","Title","language","Body","textAlign","src","width","alt","marginTop","to","Button","Home","height","overflowY","Accordion","Item","eventKey","ListGroup","Table","striped","bordered","LeftSwitchWrapper","RightSwitchWrapper","SwitchButton","ImageSwitch","switchPrev","switchNext","Fragment","currentLocState","atom","key","default","currentImgIdState","currentImgSrcState","currentImgAngleState","currentImgSizeState","userState","dangerouslyAllowMutability","login","provider","GoogleAuthProvider","auth","getAuth","signInWithRedirect","useUser","useRecoilValue","NewGraffitiModal","isOpen","closeModal","openCanvas","mode","EditGraffitiModal","imgInfo","currentLoc","db","getDatabase","title","prompt","detail","set","ref","id","then","snap","sp","alert","window","location","href","catch","e","creator_id","s","MenuWrapper","Container","ActionButton","IntroCard","Card","props","HideMenuButton","OpenMenuButton","ActionMenu","likeTrigger","user","showNewGraffitiModal","setShowNewGraffitiModal","showEditGraffitiModal","setShowEditGraffitiModal","likes","Object","keys","length","setLikes","includes","uid","liked","setLiked","isMenuDisplayed","setIsMenuDisplayed","padding","as","Text","fontSize","ButtonGroup","size","borderLeft","borderTopLeftRadius","origin","pathname","prev_img_ids","marginBottom","borderRight","borderTopRightRadius","PainterMenuWrapper","DrawButton","getWindowDimensions","innerWidth","innerHeight","insertImageToCanvas","url","fabricCanvas","fabric","Image","fromURL","img","scaleToWidth","add","left","top","crossOrigin","Canvas","closeCanvas","basePrevIds","imgInfos","currentImgId","currentImgSrc","windowDimensions","setWindowDimensions","cv","useRef","lineColor","setLineColor","lineWidth","setLineWidth","Tools","Pencil","tool","setTool","canUndo","setCanUndo","canRedo","setCanRedo","angle","setAngle","isMenuOpen","setIsMenuOpen","current","_fc","addEventListener","beta","Math","round","zIndex","backgroundColor","borderBottom","name","fillColor","forceValue","onChange","prev","now","imageFormat","Row","Col","xs","Line","OverlayTrigger","trigger","placement","overlay","Popover","hex","paddingRight","display","verticalAlign","min","max","value","changeEvent","target","Select","disabled","removeSelected","copy","paste","undo","redo","confirm","clear","lastAngle","storage","getStorage","Date","dataUrl","toDataURL","uploadString","storageRef","getDownloadURL","Promise","all","dbSet","dbRef","prev_user_ids","type","username","displayName","err","Graffitis","useRecoilState","setCurrentLoc","setCurrentImgId","setCurrentImgSrc","useSetRecoilState","currentImgIdIndex","setCurrentImgIdIndex","setCurrentImgAngle","setCurrentImgSize","canvasVisibility","setCanvasVisibility","setImgInfos","graffitiMode","setGraffitiMode","initImgInfos","infos","imgInfosArr","Array","isArray","pid","queryString","parse","search","imgIdIndex","indexOf","switchImgSrc","imgId","get","exists","val","console","updateLikes","action","qs","baseIds","bid","idsObj","forEach","userGraffitiIdsSnap","prevIndex","stringify","history","replaceState","path","nextIndex","bottom","notificationMap","setTitle","notifications","setNotifications","Navbar","background","Collapse","Nav","borderColor","back","Brand","NavDropdown","drop","changeLanguage","borderTop","signOut","logout","border","float","nid","navigateToGraffitiFromNotification","whiteSpace","replace","split","reverse","join","Auth","children","isLoading","setIsLoading","setUser","onAuthStateChanged","useAuth","App","event","mediaDevices","getUserMedia","video","audio","stream","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Scene","currentImgAngle","currentImgSize","imgSrcs","setImgSrcs","setPosition","rotation","setRotation","cos","PI","sin","renderer","arjs","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","use","initReactI18next","init","resources","en","translation","ja","lng","fallbackLng","interpolation","escapeValue","Root","ReactDOM","render","document","getElementById","webpackEmptyContext","req","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.885e4e9c.chunk.js","sourcesContent":["const locations = {\n  garden: {\n    nameJA: '中庭',\n    descriptionJA: 'テスト用',\n    nameEN: 'Courtyard',\n    descriptionEN: 'Test',\n    range: {\n      minLat: 35.0,\n      maxLat: 36.0,\n      minLong: 139.0,\n      maxLong: 140.0\n    }\n  },\n  '55': {\n    nameJA: '55号館外',\n    descriptionJA: '外の廊下から、中庭向き',\n    nameEN: 'Bldg. 55',\n    descriptionEN: 'From the corridor outside, facing the courtyard',\n    range: {\n      minLat: 35.7058,\n      maxLat: 35.7061,\n      minLong: 139.7080,\n      maxLong: 139.7083\n    }\n  },\n  '54_55': {\n    nameJA: '54、55号館の間',\n    descriptionJA: '55号館の入口前から、54-55号館連絡通路向き',\n    nameEN: 'Bldg. 54-55',\n    descriptionEN: \"From the front of Bldg. 55's entrance, facing skywalks between Bldg. 54 & 55\",\n    range: {\n      minLat: 35.70565,\n      maxLat: 35.7062,//35.7059,\n      minLong: 139.70795,\n      maxLong: 139.7082\n    }\n  },\n  '51': {\n    nameJA: '51号館',\n    descriptionJA: '一階の南側入口の前から、西側の地下に向ける',\n    nameEN: 'Bldg. 51',\n    descriptionEN: 'From the front of south entrance (1F), facing the basement on the West side',\n    range: {\n      minLat: 35.70575,\n      maxLat: 35.7060,\n      minLong: 139.7066,\n      maxLong: 139.7069\n    }\n  },\n  '51_60_top': {\n    nameJA: '51、60号館の間',\n    descriptionJA: '南側の空中通路から',\n    nameEN: 'Bldg. 51-60',\n    descriptionEN: 'From the south passageway (1F)',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7060,\n      minLong: 139.7061,\n      maxLong: 139.7065\n    }\n  },\n  '60_61': {\n    nameJA: '60、61号館の間',\n    descriptionJA: '南側の地面通路から',\n    nameEN: 'Bldg. 60-61',\n    descriptionEN: 'From the south skywalk (2F)',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7060,\n      minLong: 139.7057,\n      maxLong: 139.7061\n    }\n  }\n};\n\nexport default locations;","import { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Alert from 'react-bootstrap/Alert';\nimport styled from 'styled-components';\nimport locations from './locations';\nimport { useTranslation } from \"react-i18next\";\n\nconst MapContainer = styled.div`\n  position: relative;\n  margin: 0px auto;\n  width: 375px;\n  height: 150px;\n  background-image: url('/img/map.jpeg');\n  background-size: contain;\n`;\n\nconst BasePin = styled.i`\n  position: absolute;\n  font-size: 24px;\n`;\n\nconst PinGarden = styled(BasePin)`\ntop: 50px;\nleft: 240px;\n`;\n\nconst Pin51 = styled(BasePin)`\n  top: 75px;\n  left: 165px;\n`;\n\nconst Pin51_60 = styled(BasePin)`\n  top: 70px;\n  left: 125px;\n`;\n\nconst Pin60_61 = styled(BasePin)`\n  top: 70px;\n  left: 95px;\n`;\n\nconst Pin55 = styled(BasePin)`\n  top: 50px;\n  left: 290px;\n`;\n\nconst Pin54_55 = styled(BasePin)`\n  top: 75px;\n  left: 280px;\n`;\n\nconst locationComponentPairs = process.env.NODE_ENV === \"development\" ? [\n  {loc: '51', Pin: Pin51},\n  {loc: '51_60_top', Pin: Pin51_60},\n  {loc: '60_61', Pin: Pin60_61},\n  {loc: '55', Pin: Pin55},\n  {loc: '54_55', Pin: Pin54_55},\n  {loc: 'garden', Pin: PinGarden}\n] : [\n  {loc: '51', Pin: Pin51},\n  {loc: '51_60_top', Pin: Pin51_60},\n  {loc: '60_61', Pin: Pin60_61},\n  {loc: '55', Pin: Pin55},\n  {loc: '54_55', Pin: Pin54_55},\n]\n\nfunction LocationsMenu() {\n  const { t, i18n } = useTranslation();\n  const [currentCoor, setCurrentCoor] = useState(null);\n  const [selectedLoc, setSelectedLoc] = useState('');\n  const [retrieveCoorFailed, setRetrieveCoorFailed] = useState(false);\n\n  const handleRetrievingCoor = () => {\n    navigator.geolocation.getCurrentPosition(\n      function(position) {\n        setCurrentCoor(position.coords);\n        if (retrieveCoorFailed) setRetrieveCoorFailed(false);\n      },\n      function(error) {\n        setRetrieveCoorFailed(true);\n      }\n    );\n  }\n\n  useEffect(() => {\n    handleRetrievingCoor();\n    var retrieveCoorTimer = setInterval(handleRetrievingCoor, 5000);\n    return () => clearInterval(retrieveCoorTimer);\n  }, [])\n\n  const isCoorInRange = (LocCoorRange) =>\n    currentCoor && LocCoorRange\n      && (currentCoor.latitude >= LocCoorRange.minLat)\n      && (currentCoor.latitude <= LocCoorRange.maxLat)\n      && (currentCoor.longitude >= LocCoorRange.minLong)\n      && (currentCoor.longitude <= LocCoorRange.maxLong);\n\n  return (\n    <div style={{ paddingTop: '20px' }}>\n      <h3>{t(\"LocationsMenu.Choose location\")}</h3>\n      {\n        !currentCoor && <Alert variant=\"warning\" style={{ margin: \"1em\" }}><i className=\"bi bi-arrow-clockwise\"></i> {t(\"LocationsMenu.Retrieving location\")}</Alert>\n      }\n      {\n        retrieveCoorFailed && <Alert variant=\"danger\" style={{ margin: \"1em\" }}>{t(\"LocationsMenu.Failed to retrieve\")}</Alert>\n      }\n\n      <MapContainer>\n        {\n          locationComponentPairs.map(({loc, Pin}) => \n            <Pin key={loc} onClick={() => setSelectedLoc(loc)} className='bi bi-geo-alt-fill' style={{ color: isCoorInRange(locations[loc].range) ? 'orange' : 'black' }} />\n          )\n        }\n      </MapContainer>\n\n      <Modal centered show={selectedLoc !== ''} onHide={() => setSelectedLoc('')}>\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedLoc && (i18n.language === \"ja\" ? locations[selectedLoc].nameJA : locations[selectedLoc].nameEN)}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <p>{selectedLoc && (i18n.language === \"ja\" ? locations[selectedLoc].descriptionJA : locations[selectedLoc].descriptionEN)}</p>\n          <img src={`/img/loc/${selectedLoc}.jpeg`} width='80%' alt=\"View of the location\" />\n\n          {\n            selectedLoc && (isCoorInRange(locations[selectedLoc].range) || selectedLoc === 'garden')\n              ? (\n                <div style={{ marginTop: '1em' }}>\n                  <Alert variant=\"success\">{t(\"LocationsMenu.Point camera\")}</Alert>\n                  <Link to={'/' + selectedLoc}>\n                    <Button variant=\"outline-primary\">\n                      {t(\"LocationsMenu.View graffiti\")}\n                    </Button>\n                  </Link>\n                </div>\n              )\n              : (\n                <div style={{ marginTop: '1em' }}>\n                  <Alert variant=\"warning\">\n                    {t(\"LocationsMenu.Move here and wait\")}\n                    <br />\n                    {t(\"LocationsMenu.Please reload\")}\n                  </Alert>\n                </div>\n              )\n          }\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default LocationsMenu;\n","import LocationsMenu from './LocationsMenu';\nimport Table from 'react-bootstrap/Table';\nimport Accordion from 'react-bootstrap/Accordion';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { useTranslation } from \"react-i18next\";\n\nfunction Home() {\n  const { t } = useTranslation();\n\n  return (\n    <div style={{ height: \"calc(100vh - 56px)\", overflowY: \"auto\", marginTop: \"56px\" }}>\n      <LocationsMenu />\n\n      <Accordion>\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>{t(\"Home.Explanation\")}</Accordion.Header>\n          <Accordion.Body>\n            <ListGroup variant=\"flush\" style={{ textAlign: 'left' }}>\n              <ListGroup.Item>{t(\"Home.Explanation 1\")}</ListGroup.Item>\n              <ListGroup.Item>{t(\"Home.Explanation 2\")}</ListGroup.Item>\n              <ListGroup.Item>{t(\"Home.Explanation 3\")}</ListGroup.Item>\n            </ListGroup>\n          </Accordion.Body>\n        </Accordion.Item>\n\n        <Accordion.Item eventKey=\"1\">\n          <Accordion.Header>{t(\"Home.Locations list\")}</Accordion.Header>\n          <Accordion.Body>\n            <Table striped bordered>\n              <thead>\n                <tr><th>{t(\"Home.Location\")}</th><th>{t(\"Home.Viewpoint\")}</th><th>{t(\"Home.Rain\")}</th></tr>\n              </thead>\n              <tbody>\n                <tr><td>{t(\"Home.55\")}</td><td>{t(\"Home.55 viewpoint\")}</td><td>◯</td></tr>\n                <tr><td>{t(\"Home.54-55\")}</td><td>{t(\"Home.54-55 viewpoint\")}</td><td>×</td></tr>\n                <tr><td>{t(\"Home.51\")}</td><td>{t(\"Home.51 viewpoint\")}</td><td>◯</td></tr>\n                <tr><td>{t(\"Home.51-60\")}</td><td>{t(\"Home.51-60 viewpoint\")}</td><td>◯</td></tr>\n                <tr><td>{t(\"Home.60-61\")}</td><td>{t(\"Home.60-61 viewpoint\")}</td><td>×</td></tr>\n              </tbody>\n            </Table>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\nconst LeftSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  left: 0;\n`\n\nconst RightSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  right: 0;\n`\n\nconst SwitchButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.3);\n  color: rgba(200, 200, 200);\n  border: none;\n  font-size: 36px;\n  padding: 0px;\n`;\n\nfunction ImageSwitch({ switchPrev, switchNext }) {\n  return(\n    <React.Fragment>\n      <LeftSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchPrev}><i className=\"bi bi-chevron-compact-left\"></i></SwitchButton>\n      </LeftSwitchWrapper>\n      <RightSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchNext}><i className=\"bi bi-chevron-compact-right\"></i></SwitchButton>\n      </RightSwitchWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default ImageSwitch;","import { atom } from \"recoil\";\n\nexport const currentLocState = atom({\n  key: 'currentLocState',\n  default: '',\n});\n\nexport const currentImgIdState = atom({\n  key: 'currentImgIdState',\n  default: '',\n});\n\nexport const currentImgSrcState = atom({\n  key: 'currentImgSrcState',\n  default: '',\n});\n\nexport const currentImgAngleState = atom({\n  key: 'currentImgAngleState',\n  default: 0,\n});\n\nexport const currentImgSizeState = atom({\n  key: 'currentImgSizeState',\n  default: null,\n});\n\nexport const userState = atom ({\n  key: 'userState',\n  default: null,\n  dangerouslyAllowMutability: true,\n})","import { useEffect, useState } from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { userState } from './atoms';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signOut,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n} from \"firebase/auth\";\n\nexport const login = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  return signInWithRedirect(auth, provider);\n};\n\nexport const logout = () => {\n  const auth = getAuth();\n  return signOut(auth);\n};\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const setUser = useSetRecoilState(userState);\n\n  useEffect(() => {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n  }, [setUser]);\n\n  return isLoading;\n};\n\nexport const useUser = () => {\n  return useRecoilValue(userState);\n};","import { Button, Modal } from 'react-bootstrap';\nimport { useTranslation } from \"react-i18next\";\n\nconst NewGraffitiModal = ({ isOpen, closeModal, openCanvas }) => {\n  const { t } = useTranslation();\n\n  const openNewGraffitiCanvas = () => {\n    openCanvas({ mode: 'new' });\n    closeModal();\n  }\n\n  const openOverwriteGraffitiCanvas = () => {\n    openCanvas({ mode: 'overwrite' });\n    closeModal();\n  }\n\n  return (\n    <Modal centered show={isOpen} onHide={closeModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{t(\"NewGraffitiModal.Which kind of graffiti?\")}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ textAlign: 'center' }}>\n        <Button variant=\"outline-primary\" onClick={openNewGraffitiCanvas}>\n          {t(\"NewGraffitiModal.New graffiti\")}\n        </Button>\n        <br /><br />\n        <Button variant=\"outline-primary\" onClick={openOverwriteGraffitiCanvas}>\n          {t(\"NewGraffitiModal.graffiti based on this one\")}\n        </Button>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default NewGraffitiModal;","import { useRecoilValue } from 'recoil';\nimport { currentLocState } from './atoms.js';\nimport { Button, Modal } from 'react-bootstrap';\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { useTranslation } from \"react-i18next\";\n\nconst EditGraffitiModal = ({ isOpen, closeModal, openCanvas, imgInfo }) => {\n  const currentLoc = useRecoilValue(currentLocState);\n  const { t } = useTranslation();\n\n  const openEditGraffitiCanvas = () => {\n    openCanvas({ mode: 'edit' });\n    closeModal();\n  }\n\n  const editGraffitiInfo = () => {\n    const db = getDatabase();\n    const title = prompt(t(\"EditGraffitiModal.Title label\"), imgInfo.title);\n    const detail = prompt(t(\"EditGraffitiModal.Details label\"), imgInfo.detail);\n\n    set(ref(db, 'img_info/' + currentLoc + '/' + imgInfo.id + '/title'), title).then(snap => {\n      set(ref(db, 'img_info/' + currentLoc + '/' + imgInfo.id + '/detail'), detail).then(sp => {\n        alert(t(\"EditGraffitiModal.Updated\"));\n        window.location.href = \"/\" + currentLoc + \"?pid=\" + imgInfo.id;\n      }).catch(e => alert(e));\n    }).catch(e => alert(e));\n  }\n\n  const deleteGraffiti = () => {\n    const db = getDatabase();\n    set(ref(db, 'img_urls/' + currentLoc + '/' + imgInfo.id), null).then(snap => {\n      set(ref(db, 'img_info/' + currentLoc + '/' + imgInfo.id), null).then(sp => {\n        set(ref(db, 'users/' + imgInfo.creator_id + '/img_ids/' + currentLoc + '/' + imgInfo.id), null).then(s => {\n          alert(t(\"EditGraffitiModal.Deleted\"));\n          window.location.href = \"/\" + currentLoc;\n        }).catch(e => alert(e));\n      }).catch(e => alert(e));\n    }).catch(e => alert(e));\n  }\n\n  return (\n    <Modal centered show={isOpen} onHide={closeModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{t(\"EditGraffitiModal.Edit/Delete\")}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ textAlign: 'center' }}>\n        <Button variant=\"outline-primary\" onClick={openEditGraffitiCanvas}>\n          <i className='bi bi-pencil-square' /> {t(\"EditGraffitiModal.Edit graffiti\")}\n        </Button>\n        <br /><br />\n        <Button variant=\"outline-primary\" onClick={editGraffitiInfo}>\n          <i className='bi bi-brush' /> {t(\"EditGraffitiModal.Edit title and details\")}\n        </Button>\n        <br /><br />\n        <Button variant=\"outline-danger\" onClick={deleteGraffiti}>\n          <i className='bi bi-trash' /> {t(\"EditGraffitiModal.Delete\")}\n        </Button>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default EditGraffitiModal;","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, ButtonGroup, Button, Card, Modal } from 'react-bootstrap';\nimport { useUser } from './auth';\nimport NewGraffitiModal from './NewGraffitiModal';\nimport EditGraffitiModal from './EditGraffitiModal';\nimport { useTranslation } from \"react-i18next\";\n\nconst MenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: transparent;\n  padding-bottom: 10px;\n`\n\nconst ActionButton = styled(Button)`\n  background: transparent;\n  border: 0.5px solid #fff;\n  border-bottom: none;\n  height: 30px;\n  color: #fff;\n`\n\nconst IntroCard = styled(Card)`\n  ${props => !props.isOpen && 'display: none;'}\n  height: 100px;\n  overflow-y: scroll;\n  background-color: rgba(0, 0, 0, 0.4);\n  color: #fff;\n  border: 0.5px solid #fff;\n  border-radius: 10px;\n`;\n\nconst HideMenuButton = styled(Button)`\n  position: absolute;\n  top: 5px;\n  right: 5px;\n  width: 25px;\n  height: 25px;\n  padding: 0px;\n  background-color: transparent;\n  border: none;\n  font-size: 24px;\n  line-height: 0px;\n  border-radius: 50%;\n`;\n\nconst OpenMenuButton = styled(Button)`\n  width: 100%;\n  height: 30px;\n  padding: 0px;\n  font-size: 36px;\n  line-height: 0px;\n  background: rgba(255, 255, 255, 0.3);\n  color: rgb(200, 200, 200);\n  border: none;\n`;\n\nfunction ActionMenu({ imgInfo, openCanvas, likeTrigger }) {\n  const user = useUser();\n  const [showNewGraffitiModal, setShowNewGraffitiModal] = useState(false);\n  const [showEditGraffitiModal, setShowEditGraffitiModal] = useState(false);\n  const [likes, setLikes] = useState(imgInfo.likes ? Object.keys(imgInfo.likes).length : 0)\n  const [liked, setLiked] = useState(imgInfo.likes && Object.keys(imgInfo.likes).includes(user.uid))\n  const [isMenuDisplayed, setIsMenuDisplayed] = useState(true)\n  const { t } = useTranslation();\n\n  const handleLikeTrigger = () => {\n    likeTrigger();\n    setLikes(liked ? likes - 1 : likes + 1);\n    setLiked(!liked);\n  }\n\n  const navigateToBaseGraffitis = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=base&bid=' + imgInfo.id;\n  }\n\n  const navigateToUserGraffitis = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=user&uid=' + imgInfo.creator_id;\n  }\n\n  useEffect(() => {\n    setLikes(imgInfo.likes ? Object.keys(imgInfo.likes).length : 0);\n    setLiked(imgInfo.likes && Object.keys(imgInfo.likes).includes(user.uid));\n  }, [imgInfo]);\n\n  return (\n    <MenuWrapper>\n      {!isMenuDisplayed && <OpenMenuButton variant='outline-light' onClick={() => setIsMenuDisplayed(true)}><i className='bi bi-chevron-compact-up' /></OpenMenuButton>}\n\n      <IntroCard isOpen={isMenuDisplayed}>\n        <Card.Body style={{ padding: 0, position: 'relative' }}>\n          <HideMenuButton variant='outline-light' onClick={() => setIsMenuDisplayed(false)}><i className='bi bi-x' /></HideMenuButton>\n          <Card.Title as='h6' style={{ height: '15px', margin: '5px' }}>{imgInfo.title}</Card.Title>\n          <Card.Text style={{ fontSize: '14px', height: '40px', margin: '5px' }}>\n            {imgInfo.detail}\n          </Card.Text>\n          <ButtonGroup style={{ width: '100%', margin: 0, height: '30px' }}>\n            {\n              imgInfo.creator_id === user.uid ? (\n                <ActionButton variant='light' size='sm' onClick={() => setShowEditGraffitiModal(true)} style={{ borderLeft: 'none', borderTopLeftRadius: 0 }}>\n                  <i className=\"bi bi-gear\"></i>\n                  {' '}{t(\"ActionMenu.Edit/Delete\")}\n                </ActionButton>\n              ) : (\n                <ActionButton variant='light' size='sm' onClick={navigateToUserGraffitis} style={{ borderLeft: 'none', borderTopLeftRadius: 0 }}>\n                  <i className=\"bi bi-person\"></i>\n                  {' '}{t(\"ActionMenu.User\")}\n                </ActionButton>\n              )\n            }\n            {\n              imgInfo?.prev_img_ids && (\n                <ActionButton variant='light' size='sm' onClick={navigateToBaseGraffitis} style={{ marginBottom: 0 }}>\n                  <i className=\"bi bi-collection\"></i>\n                  {' '}{t(\"ActionMenu.Based works\")}\n                </ActionButton>\n              )\n            }\n            <ActionButton variant='light' size='sm' onClick={handleLikeTrigger}>\n              <i className={liked ? \"bi bi-heart-fill\" : \"bi bi-heart\"}></i>\n              {' '}{likes}\n            </ActionButton>\n            <ActionButton variant='light' size='sm' onClick={() => setShowNewGraffitiModal(true)} style={{ borderRight: 'none', borderTopRightRadius: 0 }}>\n              <i className=\"bi bi-pencil\"></i>\n              {' '}{t(\"ActionMenu.Paint yours\")}\n            </ActionButton>\n          </ButtonGroup>\n        </Card.Body>\n      </IntroCard>\n\n      <NewGraffitiModal isOpen={showNewGraffitiModal} closeModal={() => setShowNewGraffitiModal(false)} openCanvas={openCanvas} />\n      <EditGraffitiModal isOpen={showEditGraffitiModal} closeModal={() => setShowEditGraffitiModal(false)} openCanvas={openCanvas} imgInfo={imgInfo} />\n\n    </MenuWrapper>\n  )\n}\n\nexport default ActionMenu;","import { useEffect, useState, useRef } from 'react';\nimport { getDatabase, ref as dbRef, set as dbSet } from \"firebase/database\";\nimport { getStorage, ref as storageRef, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, ButtonGroup, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { useUser } from './auth'\nimport { useTranslation } from \"react-i18next\";\n\nimport { CompactPicker } from 'react-color';\nimport { SketchField, Tools } from 'react-sketch';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { fabric } from \"fabric\";\n\nconst PainterMenuWrapper = styled(Container)`\n  ${props => !props.isOpen && 'display: none;'}\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 80px;\n  padding: 0px;\n  background-color: transparent;\n`;\n\nconst DrawButton = styled(Button)`\n  margin: 0px 3px;\n  padding: 0px;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: 0.5px solid #fff;\n  background-color: rgba(0, 0, 0, 0.4);\n  color: #fff;\n`;\n\nconst ActionButton = styled(Button)`\n  padding: 3px 0px;\n  border: 0.5px solid #fff;\n  background-color: rgba(0, 0, 0, 0.4);\n  color: #fff;\n`;\n\nconst HideMenuButton = styled(Button)`\n  position: absolute;\n  bottom: 80px;\n  right: 5px;\n  padding: 0px;\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n  border: 0.5px solid rgba(0, 0, 0, 0.4);\n  background-color: transparent;\n  color: rgba(0, 0, 0, 0.4);\n  font-size: 24px;\n`;\n\nconst OpenMenuButton = styled(Button)`\n  position: absolute;\n  left: 0px;\n  bottom: 0px;\n  width: 100%;\n  height: 30px;\n  padding: 0px;\n  font-size: 36px;\n  line-height: 0px;\n  background: rgba(255, 255, 255, 0.3);\n  color: rgb(200, 200, 200);\n  border: none;\n`;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction insertImageToCanvas(url, fabricCanvas) {\n  fabric.Image.fromURL(\n    url,\n    function (img) {\n      img.scaleToWidth(getWindowDimensions().width);\n      fabricCanvas.add(img.set({\n        left: 0,\n        top: 0,\n      }));\n    },\n    {\n      crossOrigin: 'Anonymous'\n    }\n  )\n}\n\nconst Canvas = ({ closeCanvas, basePrevIds, mode, imgInfos, imgInfo }) => {\n  const { t } = useTranslation();\n  const user = useUser();\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const cv = useRef(null);\n  const [ lineColor, setLineColor ] = useState('#000');\n  const [ lineWidth, setLineWidth ] = useState(5);\n  const [ tool, setTool ] = useState(Tools.Pencil);\n  const [ canUndo, setCanUndo ] = useState(false);\n  const [ canRedo, setCanRedo ] = useState(false);\n  const [ angle, setAngle ] = useState(0);\n  const [ isMenuOpen, setIsMenuOpen ] = useState(true);\n\n  // load base graffiti on canvas\n  useEffect(() => {\n    setWindowDimensions(getWindowDimensions());\n    if (mode !== 'new') {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  }, [mode, currentImgSrc]);\n\n  useEffect(() => {\n    window.addEventListener(\"deviceorientation\", function(e){\n      const { beta } = e;\n      setAngle(Math.round(beta * 100) / 100)\n    });\n  }, [])\n\n  const undo = () => {\n    cv.current.undo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const redo = () => {\n    cv.current.redo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const clear = () => {\n    if(!window.confirm(t(\"Canvas.Clear confirm\"))) return;\n    cv.current.clear();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n    if (mode !== 'new') {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  };\n\n  const duplicateSelected = () => {\n    try {\n      cv.current.copy();\n      cv.current.paste();\n    } catch (error) {\n      alert(t(\"Canvas.Select before duplicate\"))\n    }\n  }\n\n  const removeSelected = () => {\n    try {\n      cv.current.removeSelected();\n    } catch (error) {\n      alert(t(\"Canvas.Select before delete\"))\n    }\n  }\n\n  // Todo: save draft\n\n  const onSketchChange = () => {\n    let prev = canUndo;\n    let now = cv.current?.canUndo();\n    if (prev !== now) setCanUndo(now);\n  };\n\n  const saveCanvas = () => {\n    if(!window.confirm(t(\"Canvas.Please fix tilt\"))) return;\n    const lastAngle = angle;\n    if (lastAngle) {\n      alert(t(\"Canvas.Tilt retrieved\"));\n    } else {\n      alert(t(\"Canvas.Error\"));\n      return;\n    }\n\n    var title, detail, id;\n    const storage = getStorage();\n    const db = getDatabase();\n\n    title = prompt(t(\"Canvas.Title label\"), mode === 'edit' ? imgInfo.title : '');\n    detail = prompt(t(\"Canvas.Details label\"), mode === 'edit' ? imgInfo.detail : '');\n    \n    id = mode === 'edit' ? currentImgId : Date.now();\n    if (title === \"\") title = id;\n\n    const dataUrl = cv.current.toDataURL();\n\n    uploadString(storageRef(storage, 'paintings/' + title), dataUrl, 'data_url')\n      .then(snap => getDownloadURL(snap.ref))\n      .then(url => {\n\n        Promise.all([\n          dbSet(dbRef(db, 'img_urls/' + currentLoc + '/' + id), url), // save url\n          dbSet(dbRef(db, 'img_info/' + currentLoc + '/' + id), {\n            title,\n            detail,\n            angle: lastAngle,\n            size: {\n              width: windowDimensions.width,\n              height: windowDimensions.height - 120,\n            },\n            creator_id: user.uid,\n            prev_img_ids: mode === 'overwrite' && { [currentImgId]: true, ...basePrevIds }\n          }), // save info\n          dbSet(dbRef(db, 'users/' + user.uid + '/img_ids/' + currentLoc + '/' + id), true) // add img id to user\n        ]).then(snap => {\n\n          // send notifications\n          const prev_user_ids = imgInfos.map(img => img.creator_id);\n          Promise.all(prev_user_ids.map(uid => dbSet(dbRef(db, 'users/' + uid + '/notifications/' + id), {\n            type: 0,\n            loc: currentLoc,\n            username: user.displayName\n          })))\n            .then(s => {\n              dbSet(dbRef(db, 'users/' + user.uid + '/name'), user.displayName)\n                .then(snap => {\n\n                  // upload success & reload\n                  alert(t(\"Canvas.Uploaded\"));\n                  closeCanvas();\n                  window.location.href = \"/\" + currentLoc + \"?pid=\" + id\n\n                }).catch(err => alert(err));\n            }).catch(err => alert(err));\n        }).catch(err => alert(err));\n      }).catch(err => alert(err));\n  }\n\n  const confirmCloseCanvas = () => {\n    window.confirm(t(\"Canvas.Confirm close canvas\")) && closeCanvas();\n  }\n\n  const colorSelector = (props) => (\n    <Popover {...props} style={{ ...props.style, padding: '10px' }}>\n      <CompactPicker\n        id='lineColor'\n        color={lineColor}\n        onChange={(color) => setLineColor(color.hex)}\n      />\n    </Popover>\n  )\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        zIndex: 1000,\n        left: 0,\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n        borderBottom: \"5px solid #aaa\"\n      }}\n    >\n      <SketchField\n        name=\"sketch\"\n        className=\"canvas-area\"\n        ref={cv}\n        lineColor={lineColor}\n        lineWidth={lineWidth}\n        fillColor='transparent'\n        width={windowDimensions.width}\n        height={windowDimensions.height}\n        forceValue\n        onChange={onSketchChange}\n        tool={tool}\n        imageFormat={'jpeg'}\n      />\n\n      {\n        isMenuOpen\n          ? <HideMenuButton variant='outline-light' onClick={() => setIsMenuOpen(false)}><i className='bi bi-x' /></HideMenuButton>\n          : <OpenMenuButton variant='outline-light' onClick={() => setIsMenuOpen(true)}><i className='bi bi-chevron-compact-up' /></OpenMenuButton>\n        }\n\n      <PainterMenuWrapper isOpen={isMenuOpen}>\n        <Row style={{ padding: '0px 15px', marginBottom: '10px' }}>\n          <Col xs={4} style={{ padding: 0 }}>\n            <DrawButton variant={tool === Tools.Pencil ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Pencil)}><i className=\"bi bi-pencil\" /></DrawButton>\n            <DrawButton variant={tool === Tools.Line ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Line)}><i className=\"bi bi-slash-lg\" /></DrawButton>\n            <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={colorSelector} style={{ position: 'relative' }}>\n              <DrawButton variant='light' style={{ backgroundColor: '#fff' }}>\n                <i className=\"bi bi-palette\" style={{ color: lineColor }} />{\" \"}\n              </DrawButton>\n            </OverlayTrigger>\n          </Col>\n          <Col xs={4} style={{ paddingRight: '5px', padding: 0 }}>\n            <div>\n              <i className=\"bi bi-border-width\" />{\" \"}\n              <div style={{ display: 'inline-block', verticalAlign: 'middle' }}>\n                <RangeSlider\n                  min={1}\n                  max={15}\n                  value={lineWidth}\n                  style={{ width: '80px' }}\n                  onChange={changeEvent => setLineWidth(changeEvent.target.value)}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col xs={4} style={{ padding: 0 }}>\n            <DrawButton variant={tool === Tools.Select ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Select)}><i className=\"bi bi-hand-index-thumb\" /></DrawButton>\n            <DrawButton disabled={tool !== Tools.Select} variant='light' onClick={removeSelected}><i className='bi bi-trash' /></DrawButton>\n            <DrawButton disabled={tool !== Tools.Select} variant='light' onClick={duplicateSelected}><i className='bi bi-files' /></DrawButton>\n          </Col>\n        </Row>\n\n        <ButtonGroup style={{ width: '100%' }}>\n          <ActionButton disabled={!canUndo} variant='light' onClick={undo}><i className='bi bi-arrow-90deg-left' /></ActionButton>\n          <ActionButton disabled={!canRedo} variant='light' onClick={redo}><i className='bi bi-arrow-90deg-right' /></ActionButton>\n          <ActionButton variant='light' onClick={clear}><i className='bi bi-arrow-counterclockwise' /></ActionButton>\n          <ActionButton variant='light' onClick={saveCanvas}><i className='bi bi-check-lg' /> {t(\"Canvas.Done\")}</ActionButton>\n          <ActionButton variant='light' onClick={confirmCloseCanvas}><i className='bi bi-x-lg' /> {t(\"Canvas.Cancel\")}</ActionButton>\n        </ButtonGroup>\n      </PainterMenuWrapper>\n    </div>\n  )\n};\n\nexport default Canvas;","import { useEffect, useState } from 'react';\nimport ImageSwitch from './ImageSwitch';\nimport ActionMenu from './ActionMenu';\nimport Canvas from './Canvas';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { currentImgIdState, currentImgSrcState, currentImgAngleState, currentImgSizeState, currentLocState } from './atoms.js';\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport { useUser } from './auth'\nimport queryString from 'query-string';\nimport Button from 'react-bootstrap/Button';\nimport { useTranslation } from \"react-i18next\";\n\nfunction Graffitis({ loc, location }) {\n  const { t } = useTranslation();\n  const [currentLoc, setCurrentLoc] = useRecoilState(currentLocState);\n  const [currentImgId, setCurrentImgId] = useRecoilState(currentImgIdState);\n  const setCurrentImgSrc = useSetRecoilState(currentImgSrcState);\n  const [currentImgIdIndex, setCurrentImgIdIndex] = useState(0);\n  const setCurrentImgAngle = useSetRecoilState(currentImgAngleState);\n  const setCurrentImgSize = useSetRecoilState(currentImgSizeState);\n  const [canvasVisibility, setCanvasVisibility] = useState(false);\n  const [imgInfos, setImgInfos] = useState([]);\n  const [graffitiMode, setGraffitiMode] = useState('new');\n  const user = useUser();\n\n  const switchToPrevImg = () => {\n    if (imgInfos.length > 1) {\n      const prevIndex = currentImgIdIndex === 0 ? imgInfos.length - 1 : currentImgIdIndex - 1;\n      setCurrentImgIdIndex(prevIndex);\n      setCurrentImgId(imgInfos[prevIndex].id);\n      switchImgSrc(imgInfos[prevIndex].id);\n      setCurrentImgAngle(imgInfos[prevIndex].angle);\n      setCurrentImgSize(imgInfos[prevIndex].size);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[prevIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const switchToNextImg = () => {\n    if (imgInfos.length > 1) {\n      const nextIndex = currentImgIdIndex === imgInfos.length - 1 ? 0 : currentImgIdIndex + 1;\n      setCurrentImgIdIndex(nextIndex);\n      setCurrentImgId(imgInfos[nextIndex].id);\n      switchImgSrc(imgInfos[nextIndex].id);\n      setCurrentImgAngle(imgInfos[nextIndex].angle);\n      setCurrentImgSize(imgInfos[nextIndex].size);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[nextIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const initImgInfos = (infos) => {\n    var imgInfosArr = infos;\n    if (!Array.isArray(infos)) {\n      imgInfosArr = Object.keys(infos).map(id => ({\n        id: id,\n        ...infos[id]\n      }))\n    }\n\n    const pid = queryString.parse(location.search).pid;\n    setImgInfos(imgInfosArr);\n    setCurrentImgId(pid || imgInfosArr[0].id);\n    const imgIdIndex = pid ? imgInfosArr.map(img => img.id).indexOf(pid) : 0;\n    setCurrentImgIdIndex(imgIdIndex);\n    switchImgSrc(pid || imgInfosArr[0].id);\n    setCurrentImgAngle(imgInfosArr[imgIdIndex].angle);\n    setCurrentImgSize(imgInfosArr[imgIdIndex].size);\n  }\n\n  const switchImgSrc = (imgId) => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + loc + '/' + imgId)).then(snap => {\n      if(snap.exists()){\n        setCurrentImgSrc(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }\n\n  const updateLikes = (action) => {\n    var infos = imgInfos;\n    if (action === 1) {\n      infos[currentImgIdIndex].likes = {\n        ...infos[currentImgIdIndex].likes,\n        [user.uid]: true\n      };\n    } else {\n      delete infos[currentImgIdIndex].likes[user.uid]\n    }\n    setImgInfos(infos);\n  }\n\n  const likeTrigger = () => {\n    const db = getDatabase();\n    if (imgInfos[currentImgIdIndex].likes && imgInfos[currentImgIdIndex].likes[user.uid]) {\n      set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + user.uid), null).then(snap => updateLikes(-1)).catch(err => alert(err));\n    } else {\n      set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + user.uid), true).then(snap => {\n        updateLikes(1);\n        set(ref(db, 'users/' + imgInfos[currentImgIdIndex].creator_id + '/notifications/' + currentImgId), {\n          type: 1,\n          loc: currentLoc,\n          username: imgInfos[currentImgIdIndex].likes && Object.keys(imgInfos[currentImgIdIndex].likes).length > 1 ? user.displayName + \"と他の\" + (Object.keys(imgInfos[currentImgIdIndex].likes).length - 1) + \"人\" : user.displayName\n        })\n      }).catch(err => alert(err));\n    }\n  }\n\n  useEffect(() => {\n    setCurrentLoc(loc);\n\n    const qs = queryString.parse(location.search)\n    const db = getDatabase();\n    get(ref(db, 'img_info/' + loc)).then(snap => {\n      if(snap.exists()){\n        if (qs.mode && qs.mode === 'base') {\n          const baseIds = Object.keys(snap.val()[qs.bid].prev_img_ids);\n          var idsObj = {};\n          baseIds.forEach(id => {\n            idsObj[id] = snap.val()[id]\n          });\n          initImgInfos(idsObj);\n        } else if (qs.mode && qs.mode === 'user') {\n          get(ref(db, 'users/' + qs.uid + '/img_ids/' + loc)).then(userGraffitiIdsSnap => {\n            var idsObj = {};\n            if (userGraffitiIdsSnap.val()) {\n              Object.keys(userGraffitiIdsSnap.val()).forEach(id => {\n                idsObj[id] = snap.val()[id]\n              });\n              initImgInfos(idsObj);\n            }\n          })\n        } else {\n          initImgInfos(snap.val());\n        }\n      }\n    }).catch(err => console.error(err));\n  }, [])\n\n  return (\n    <div>\n      <ImageSwitch switchPrev={switchToPrevImg} switchNext={switchToNextImg} />\n      {\n        canvasVisibility && (\n          <Canvas\n            mode={graffitiMode}\n            basePrevIds={imgInfos[currentImgIdIndex]?.prev_img_ids || {}}\n            closeCanvas={() => setCanvasVisibility(false)}\n            imgInfos={imgInfos}\n            imgInfo={imgInfos[currentImgIdIndex]}\n          />\n        )\n      }\n      {\n        !canvasVisibility && (\n          imgInfos.length > 0\n            ? (\n              <ActionMenu\n                imgInfo={imgInfos[currentImgIdIndex]}\n                openCanvas={({ mode }) => {setCanvasVisibility(true); setGraffitiMode(mode);}}\n                likeTrigger={likeTrigger}\n              />\n            )\n            : (\n              <Button\n                style={{ position: 'absolute', bottom: 0, left: 0, width: '100vw' }}\n                onClick={() => {setCanvasVisibility(true); setGraffitiMode('new');}}\n              >{t(\"Graffitis.Paint first graffiti\")}</Button>\n            )\n        )\n      }\n    </div>\n  );\n}\n\nexport default Graffitis;\n","const notificationMap = [\n  \"Painted based on yours\",\n  \"Liked your graffiti\"\n];\n\nexport default notificationMap;","import { Navbar, Nav, NavDropdown, Container, Button, Row, Col } from 'react-bootstrap';\nimport { login, logout, useUser } from './auth';\nimport locations from './locations';\nimport { currentLocState } from './atoms';\nimport { useRecoilValue } from 'recoil';\nimport queryString from 'query-string';\nimport { useEffect, useState } from 'react';\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport notificationMap from './notificationMap';\nimport { useTranslation } from \"react-i18next\";\n\nfunction Header() {\n  const user = useUser();\n  const loc = useRecoilValue(currentLocState);\n  const [title, setTitle] = useState('Campus as Canvas');\n  const [notifications, setNotifications] = useState({});\n  const { t, i18n } = useTranslation();\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  const handleLogout = () => {\n    logout().catch((error) => console.error(error));\n  };\n\n  const navigateToMyGraffitis = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=user&uid=' + user.uid;\n  }\n\n  const navigateToGraffitiFromNotification = (location, nid) => {\n    set(ref(getDatabase(), 'users/' + user.uid + '/notifications/' + nid), null)\n      .then(snap => window.location.href = window.location.origin + '/' + location + '?pid=' + nid)\n      .catch(err => alert(err));\n  }\n\n  const clearNotifications = () => {\n    set(ref(getDatabase(), 'users/' + user.uid + '/notifications/'), null);\n    setNotifications({});\n  }\n\n  useEffect(() => {\n    const db = getDatabase();\n    const qs = queryString.parse(window.location.search);\n    if (qs.mode && qs.mode === 'base') {\n      get(ref(db, 'img_info/' + loc + '/' + qs.bid + '/title')).then(snap => {\n        setTitle('「' + snap.val() + '」のベース作品');\n      })\n    } else if (qs.mode && qs.mode === 'user') {\n      get(ref(db, 'users/' + qs.uid + '/name')).then(snap => {\n        setTitle(snap.val() + 'の作品');\n      })\n    } else {\n      if (loc) setTitle(locations[loc].name)\n    }\n\n    user && get(ref(db, 'users/' + user.uid + '/notifications')).then(snap => {\n      setNotifications(snap.val());\n    })\n  }, [loc])\n\n  return(\n    <Navbar style={{ position: 'absolute', left: 0, top: 0, width: '100vw', background: 'rgba(0, 0, 0, 0.3)' }}>\n      <Container>\n        {loc && <Navbar.Collapse>\n          <Nav className=\"me-auto\">\n            <Button style={{ color: '#fff', borderColor: '#fff' }} className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.location.href = '/'}>\n              <i className=\"bi bi-house\"></i>\n            </Button>\n            <span style={{ width: '10px' }}></span>\n            <Button style={{ color: '#fff', borderColor: '#fff' }} className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.history.back()}>\n              <i className=\"bi bi-chevron-compact-left\"></i>\n            </Button>\n          </Nav>\n        </Navbar.Collapse>}\n\n        <Navbar.Brand style={{ color: '#fff', margin: '0px 5px' }}>{title}</Navbar.Brand>\n\n        <Navbar.Collapse>\n          <Nav className=\"me-auto\"></Nav>\n          <Nav>\n            <NavDropdown title={<span style={{ color: '#fff' }}><i className=\"bi bi-translate\"></i></span>} drop={'start'}>\n              <NavDropdown.Item onClick={() => i18n.changeLanguage('ja')}>日本語</NavDropdown.Item>\n              <NavDropdown.Item onClick={() => i18n.changeLanguage('en')}>English</NavDropdown.Item>\n            </NavDropdown>\n\n            <NavDropdown title={<span style={{ color: '#fff' }}><i className=\"bi bi-person-circle\"></i></span>} drop={'start'}>\n              <p style={{ textAlign: 'center', marginBottom: '5px' }}>{user?.displayName}</p>\n              {\n                user\n                  ? <NavDropdown.Item style={{ borderTop: '1px solid #ccc' }} onClick={handleLogout}><i className='bi bi-box-arrow-right' /> {t(\"Header.User.Sign out\")}</NavDropdown.Item>\n                  : <NavDropdown.Item style={{ borderTop: '1px solid #ccc' }} onClick={handleLogin}><i className='bi bi-box-arrow-in-right' /> {t(\"Header.User.Sign in\")}</NavDropdown.Item>\n              }\n              {loc && <NavDropdown.Item style={{ borderTop: '1px solid #ccc' }} onClick={navigateToMyGraffitis}><i className='bi bi-images' /> {t(\"Header.User.Check my graffiti\")}</NavDropdown.Item>}\n            </NavDropdown>\n\n            <NavDropdown\n              title={<span style={{ color: '#fff' }}><i className=\"bi bi-bell\"></i>{notifications && Object.keys(notifications).length}</span>}\n              drop={'start'}\n            >\n              <div style={{ padding: '0px 10px' }}>\n                <i className=\"bi bi-bell\" />\n                <Button variant=\"outline-secondary\" size=\"sm\" style={{ padding: '0px 5px', margin: '0px 0px 5px 10px', border: '1px solid #ccc', color: '#aaa', float: 'right' }} onClick={clearNotifications}>{t(\"Header.Notifications.Clear\")}</Button>\n              </div>\n              {\n                notifications && Object.keys(notifications).map(nid => (\n                  <NavDropdown.Item\n                    style={{ width: '300px', padding: 0, borderTop: '1px solid #ccc' }}\n                    key={nid}\n                    disabled={!loc || loc !== notifications[nid].loc}\n                    onClick={() => navigateToGraffitiFromNotification(loc, nid)}\n                  >\n                    <Row style={{ width: '100%', margin: 0, padding: '5px 0px' }}>\n                      <Col xs={1}>\n                        <div style={{ display: 'flex' }}>\n                          {notifications[nid].type === 0 && <i style={{ color: 'orange' }} className='bi bi-brush' />}\n                          {notifications[nid].type === 1 && <i style={{ color: 'red', paddingTop: '12px' }} className='bi bi-heart' />}\n                        </div>\n                      </Col>\n                      <Col xs={11}>\n                        <small style={{ margin: 0, whiteSpace: 'normal' }}>\n                          {' '}\n                          {\n                            notifications[nid].username && (\n                              i18n.language === \"ja\"\n                                ? notifications[nid].username\n                                : notifications[nid].username?.replace(\"と他の\", \" and other \")?.split(\"\")?.reverse()?.join(\"\")?.replace(\"人\", \"sresu \")?.split(\"\")?.reverse()?.join(\"\")\n                            )\n                              + t(\"Header.Notifications.\" + notificationMap[notifications[nid].type])\n                          }\n                        </small>\n                        <br />\n                        <small style={{ color: '#aaa' }}>{loc && loc === notifications[nid].loc ? t(\"Header.Notifications.Click to check\") : t(\"Header.Notifications.Check in AR\")}</small>\n                      </Col>\n                    </Row>\n                  </NavDropdown.Item>\n                ))\n              }\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header;","import { Router } from '@reach/router';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport Home from './Home';\nimport Graffitis from \"./Graffitis\";\nimport { useAuth, useUser, login } from './auth';\nimport Header from './Header';\nimport { Button } from 'react-bootstrap';\nimport { useEffect } from 'react';\nimport { useTranslation } from \"react-i18next\";\n\nconst Auth = ({ children }) => {\n  const isLoading = useAuth();\n\n  return isLoading ? <p>Loading...</p> : children;\n};\n\nfunction App() {\n  const { t } = useTranslation();\n  const user = useUser();\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  useEffect(() => {\n    window.addEventListener('popstate', (event) => {\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n        .then(stream => {\n          console.log(\"Camera on\")\n        })\n        .catch(err => {\n          console.error(err)\n        });\n    });\n  })\n\n  return (\n    <div className=\"App\">\n      <Auth>\n        <div>\n          {\n            user\n              ? (\n                <div>\n                  <Header />\n                  <Router>\n                    <Home path=\"/\" />\n                    <Graffitis path=\"/:loc\" />\n                  </Router>\n                </div>\n              )\n              : (\n                <div>\n                  <Header />\n                  <Button style={{ marginTop: '45vh' }} onClick={handleLogin}>{t('App.Sign in with Google')}</Button>\n                </div>\n              )\n          }\n        </div>\n      </Auth>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState, currentImgAngleState, currentImgSizeState } from './atoms.js';\nimport { getDatabase, ref, get } from \"firebase/database\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction Scene() {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgAngle = useRecoilValue(currentImgAngleState);\n  const currentImgSize = useRecoilValue(currentImgSizeState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const [imgSrcs, setImgSrcs] = useState({});\n  const [position, setPosition] = useState(\"0.3 1.5 -10\");\n  const [rotation, setRotation] = useState(\"0 0 0\");\n\n  useEffect(() => {\n    setWindowDimensions(getWindowDimensions());\n\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + currentLoc)).then(snap => {\n      if(snap.exists()){\n        setImgSrcs(snap.val())\n      }\n    }).catch(err => console.error(err));\n    setPosition(`-0.3 ${1.5 - Math.round(Math.cos(currentImgAngle*Math.PI/180) * 50 * 100) / 100} ${(-1)*Math.round(Math.sin(currentImgAngle*Math.PI/180) * 50 * 100) / 100}`);\n    setRotation(`${currentImgAngle-90} 0 0`);\n  }, [currentLoc]);\n\n  useEffect(() => {\n    setPosition(`-0.3 ${1.5 - Math.round(Math.cos(currentImgAngle*Math.PI/180) * 50 * 100) / 100} ${(-1)*Math.round(Math.sin(currentImgAngle*Math.PI/180) * 50 * 100) / 100}`);\n    setRotation(`${currentImgAngle-90} 0 0`);\n  }, [currentImgAngle])\n\n  return (\n    <a-scene\n      id=\"a-scene\"\n      vr-mode-ui=\"enabled: false;\"\n      renderer=\"logarithmicDepthBuffer: true;\"\n      arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n    >\n      <a-assets>\n        {imgSrcs && Object.keys(imgSrcs).map(imgId => <img key={imgId} id={imgId} src={imgSrcs[imgId]} crossOrigin=\"anonymous\" alt={\"graffiti \" + imgId} />)}\n      </a-assets>\n      {currentImgSrc && <a-image\n        src={'#'+currentImgId}\n        width={currentImgSize ? windowDimensions.width / (8 * windowDimensions.width / 414) : 52}\n        height={currentImgSize ? currentImgSize.height * windowDimensions.width / currentImgSize.width / (12.5 * windowDimensions.height / 617) : 40}\n        position={position}\n        rotation={rotation}>\n      </a-image>}\n      \n      {/* <a-entity camera></a-entity> */}\n    </a-scene>\n  )\n}\n\nexport default Scene;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeApp } from 'firebase/app';\nimport Scene from './Scene';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState } from './atoms.js';\nimport { RecoilRoot } from \"recoil\";\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport en from './locales/en.json';\nimport ja from './locales/ja.json';\n\ninitializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    // the translations\n    // (tip move them in a JSON file and import them,\n    // or even better, manage them via a UI: https://react.i18next.com/guides/multiple-translation-files#manage-your-translations-with-a-management-gui)\n    resources: {\n      en: {\n        translation: en\n      },\n      ja: {\n        translation: ja\n      }\n    },\n    lng: \"en\", // if you're using a language detector, do not define the lng option\n    fallbackLng: \"en\",\n    interpolation: {\n      escapeValue: false // react already safes from xss => https://www.i18next.com/translation-function/interpolation#unescape\n    }\n  });\n\nconst Root = () => {\n  const currentLoc = useRecoilValue(currentLocState);\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      {currentLoc && <Scene />}\n      <App />\n    </div>\n  );\n}\n\nReactDOM.render(<RecoilRoot><Root /></RecoilRoot>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 694;"],"sourceRoot":""}