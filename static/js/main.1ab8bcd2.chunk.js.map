{"version":3,"sources":["logo.svg","atoms.js","locations.js","LocationsMenu.js","Header.js","ImageSwitch.js","ActionMenu.js","Canvas.js","App.js","reportWebVitals.js","Scene.js","index.js"],"names":["currentLocState","atom","key","default","currentImgIdState","currentImgSrcState","locations","id","name","range","minLat","maxLat","minLong","maxLong","Cards","styled","Row","LocationsMenu","setCurrentLoc","useSetRecoilState","useState","currentCoor","setCurrentCoor","useEffect","navigator","geolocation","getCurrentPosition","position","coords","error","console","code","message","xs","className","map","loc","Col","Card","onClick","Img","variant","src","logo","style","height","Body","Title","Text","LocCoorRange","latitude","longitude","HeaderWrapper","div","Header","location","textAlign","LeftSwitchWrapper","RightSwitchWrapper","ImageSwitch","switchPrev","switchNext","Fragment","Button","MenuWrapper","Container","ActionButton","ActionMenu","imgInfo","openCanvas","canvasVisibility","showModal","setShowModal","overflowY","padding","as","margin","title","fontSize","detail","size","Modal","centered","show","onHide","closeButton","isNew","Canvas","closeCanvas","basePrevIds","currentLoc","useRecoilValue","currentImgId","window","width","innerWidth","innerHeight","getWindowDimensions","windowDimensions","basePainting","Image","log","crossOrigin","onload","document","getElementsByTagName","getContext","drawImage","onSave","blob","storage","getStorage","db","getDatabase","prompt","Date","now","uploadBytes","storageRef","then","snap","getDownloadURL","ref","url","dbSet","dbRef","creator_id","prev_img_ids","Object","keys","alert","catch","err","render","canvas","triggerSave","setColor","setLineWidth","left","zIndex","backgroundColor","border","bottom","background","type","onChange","e","target","value","placeholder","min","max","paddingTop","App","useRecoilState","setCurrentImgId","setCurrentImgSrc","currentImgIdIndex","setCurrentImgIdIndex","setCanvasVisibility","imgInfos","setImgInfos","isNewPainting","setIsNewPainting","switchImgSrc","imgId","get","exists","val","infos","imgInfosArr","initImgInfos","length","prevIndex","nextIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Scene","currentImgSrc","imgSrcs","setImgSrcs","renderer","arjs","rotation","Root","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1ab8bcd2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { atom } from \"recoil\";\n\nexport const currentLocState = atom({\n  key: 'currentLocState',\n  default: '',\n});\n\nexport const currentImgIdState = atom({\n  key: 'currentImgIdState',\n  default: '',\n});\n\nexport const currentImgSrcState = atom({\n  key: 'currentImgSrcState',\n  default: '',\n});","const locations = [\n  {\n    id: 'garden',\n    name: 'Garden',\n    range: {\n      minLat: 35.0,\n      maxLat: 36.0,\n      minLong: 139.0,\n      maxLong: 140.0\n    }\n  },\n  {\n    id: '60',\n    name: 'Bldg. 60',\n    range: {\n      minLat: 35.7057,\n      maxLat: 35.7060,\n      minLong: 139.7058,\n      maxLong: 139.7061\n    }\n  }\n];\n\nexport default locations;","import { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport logo from './logo.svg';\nimport styled from 'styled-components';\nimport { useSetRecoilState } from 'recoil';\nimport { currentLocState } from './atoms';\nimport locations from './locations';\n\nconst Cards = styled(Row)`\n  margin: 0px 10px;\n`;\n\nfunction LocationsMenu() {\n  const setCurrentLoc = useSetRecoilState(currentLocState);\n  const [currentCoor, setCurrentCoor] = useState(null);\n\n  useEffect(() => {\n    if (!currentCoor) {\n      navigator.geolocation.getCurrentPosition(\n        function(position) {\n          setCurrentCoor(position.coords);\n        },\n        function(error) {\n          console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n        }\n      );\n    }\n  }, [])\n\n  const isCoorInRange = (LocCoorRange) =>\n    currentCoor && LocCoorRange\n      && (currentCoor.latitude >= LocCoorRange.minLat)\n      && (currentCoor.latitude <= LocCoorRange.maxLat)\n      && (currentCoor.longitude >= LocCoorRange.minLong)\n      && (currentCoor.longitude <= LocCoorRange.maxLong);\n\n  return (\n    <div >\n      <h3>場所を選択</h3>\n      <div>\n        <Cards xs={2} className=\"g-4\">\n          {currentCoor && locations.map(loc => (\n            <Col key={loc.id}>\n              <Card onClick={() => setCurrentLoc(loc.id)}>\n                <Card.Img variant=\"top\" src={logo} style={{ height: '100px' }} />\n                <Card.Body>\n                  <Card.Title>{loc.name}</Card.Title>\n                  <Card.Text>{isCoorInRange(loc.range) ? 'yes' : 'no'}</Card.Text>\n                </Card.Body>\n              </Card>\n            </Col>\n          ))}\n        </Cards>\n      </div>\n    </div>\n  );\n}\n\nexport default LocationsMenu;\n","import styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  text-align: center;\n  width: 100vw;\n  height: 50px;\n  background-color: rgba(248, 249, 250, 0.5);\n`\n\nfunction Header({ location }) {\n  return(\n    <HeaderWrapper>\n      <h2 style={{ textAlign: 'center' }}>60号館{/*location*/}</h2>\n    </HeaderWrapper>\n  )\n}\n\nexport default Header;","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\nconst LeftSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  left: 0;\n`\n\nconst RightSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  right: 0;\n`\n\nfunction ImageSwitch({ switchPrev, switchNext }) {\n  return(\n    <React.Fragment>\n      <LeftSwitchWrapper>\n        <Button onClick={switchPrev}>＜</Button>\n      </LeftSwitchWrapper>\n      <RightSwitchWrapper>\n        <Button onClick={switchNext}>＞</Button>\n      </RightSwitchWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default ImageSwitch;","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, Card, Modal } from 'react-bootstrap';\n\nconst MenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(248, 249, 250, 0.5);\n  padding: 10px;\n  padding-right: 20px;\n`\n\nconst ActionButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.5);\n  border: none;\n  width: 100%;\n`\n\n// Todo2: display based paintings\n// Todo3: like\n// Todo4: check a user's paintings in a loc\n\nfunction ActionMenu({ imgInfo, openCanvas, canvasVisibility }) {\n  const [showModal, setShowModal] = useState(false);\n\n  return !canvasVisibility && (\n    <MenuWrapper>\n      <Row>\n        <Col xs={8}>\n          <Card style={{ height: '100px', overflowY: 'scroll' }}>\n            <Card.Body style={{ padding: '5px' }}>\n              <Card.Title as='h6' style={{ margin: '5px' }}>{imgInfo.title}</Card.Title>\n              <Card.Text style={{ fontSize: '14px' }}>\n                {imgInfo.detail}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={4}>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => {}}>\n                <i className=\"bi bi-person\"></i>\n                <br />\n                User\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => {}}>\n                <i className=\"bi bi-heart\"></i>\n                <br />\n                5\n              </ActionButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => {}}>\n                <i className=\"bi bi-collection\"></i>\n                <br />\n                前作へ\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => setShowModal(true)}>\n                <i className=\"bi bi-pencil\"></i>\n                <br />\n                描こう\n              </ActionButton>\n            </Col>\n          </Row>\n          {/* <Button onClick={() => openCanvas({ isNew: false })}>ベースにして描こう</Button>\n          <Button onClick={() => openCanvas({ isNew: true })}>新しく描こう</Button> */}\n        </Col>\n      </Row>\n\n      <Modal centered show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>どんな絵を描きたい？</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: true }); setShowModal(false);}}>\n            新しく描こう\n          </Button>\n          <br /><br />\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: false }); setShowModal(false);}}>\n            これをベースにして描こう\n          </Button>\n        </Modal.Body>\n      </Modal>\n\n    </MenuWrapper>\n  )\n}\n\nexport default ActionMenu;","import { useEffect, useState } from 'react';\nimport { ReactPainter } from \"react-painter\";\nimport Button from 'react-bootstrap/Button';\nimport { getDatabase, ref as dbRef, set as dbSet } from \"firebase/database\";\nimport { getStorage, ref as storageRef, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nconst Canvas = ({ closeCanvas, basePrevIds, isNew }) => {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const [context, setContext] = useState(null);\n\n  // load base painting on canvas\n  useEffect(() => {\n    if (!isNew) {\n      var basePainting = new Image();\n      basePainting.src = '/example.jpeg' //currentImgSrc;\n      console.log(basePainting);\n      basePainting.crossOrigin = \"anonymous\";\n      basePainting.onload = () => {\n        document.getElementsByTagName(\"canvas\")[1].getContext('2d').drawImage(basePainting, 0, 0, windowDimensions.width, windowDimensions.height)\n      }\n    }\n  })\n\n  const saveCanvas = (blob) => {\n    var title, detail, painting, id;\n    const storage = getStorage();\n    const db = getDatabase();\n\n    do {\n      title = prompt(\"Please name your painting:\");\n    } while (!title);\n    detail = prompt(\"Please write something about this painting:\");\n    \n    painting = new Image();\n    painting.src = blob;\n    id = Date.now();\n\n    uploadBytes(storageRef(storage, 'paintings/' + title), blob)\n      .then(snap => getDownloadURL(snap.ref))\n      .then(url => {\n\n        // save url\n        dbSet(dbRef(db, 'img_urls/' + currentLoc + '/' + id), url)\n          .then(snap => {\n\n            // save info\n            dbSet(dbRef(db, 'img_info/' + currentLoc + '/' + id), {\n              title,\n              detail,\n              creator_id: '26577319',\n              prev_img_ids: !isNew && [currentImgId, ...Object.keys(basePrevIds)]\n            })\n              .then(snap => {\n\n                // add img id to user\n                dbSet(dbRef(db, 'users/' + '26577319' + '/img_ids/' + currentLoc + '/' + id), true)\n                  .then(snap => {\n\n                    // uploaded notification\n                    alert(\"Uploaded! Refresh the page to see your masterpiece!\");\n                    closeCanvas();\n\n                  }).catch(err => alert(err))\n              }).catch(err => alert(err));\n          }).catch(err => alert(err));\n      }).catch(err => alert(err));\n  }\n\n  return (\n    <ReactPainter\n      width={windowDimensions.width}\n      height={windowDimensions.height - 15}\n      onSave={saveCanvas}\n      render={({ canvas, triggerSave, setColor, setLineWidth }) => {\n        return (\n          <div style={{ position: 'absolute', left: 0, zIndex: \"2000\" }}>\n            <h2 style={{ margin: \"0px\" }}>{/* location */}</h2>\n            <div\n              style={{\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                border: \"5px solid #666\",\n              }}\n            >\n              {canvas}\n            </div>\n            <div style={{ position: 'absolute', bottom: 0, left: 0, padding: \"1rem\", background: \"#ccc\", width: '100vw', height: 100 }}>\n              <div>\n                Color{\" \"}\n                <input\n                  type=\"color\"\n                  onChange={(e) => setColor(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />{\" \"}\n                Width{\" \"}\n                <input\n                  type=\"number\"\n                  placeholder=\"5\"\n                  min=\"1\"\n                  max=\"20\"\n                  onChange={(e) => setLineWidth(e.target.value)}\n                  style={{ width: \"30%\" }}\n                />\n              </div>\n              <div style={{ paddingTop: \"1rem\" }}>\n                <Button onClick={triggerSave} style={{ padding: '0 10px' }}>保存</Button>\n                <Button onClick={closeCanvas} style={{ padding: '0 10px' }}>やめる</Button>\n                { /* Buttons */ }\n              </div>\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n};\n\nexport default Canvas;","import { useEffect, useState } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport LocationsMenu from './LocationsMenu';\nimport Header from './Header';\nimport ImageSwitch from './ImageSwitch';\nimport ActionMenu from './ActionMenu';\nimport Canvas from './Canvas';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { currentImgIdState, currentImgSrcState, currentLocState } from './atoms.js';\nimport { getDatabase, ref, get } from \"firebase/database\";\n\nfunction App() {\n  const currentLoc = useRecoilValue(currentLocState);\n  const [currentImgId, setCurrentImgId] = useRecoilState(currentImgIdState);\n  const [currentImgSrc, setCurrentImgSrc] = useRecoilState(currentImgSrcState);\n  const [currentImgIdIndex, setCurrentImgIdIndex] = useState(0);\n  const [canvasVisibility, setCanvasVisibility] = useState(false);\n  const [imgInfos, setImgInfos] = useState([]);\n  const [isNewPainting, setIsNewPainting] = useState(true);\n\n  const switchToPrevImg = () => {\n    if (imgInfos.length > 1) {\n      const prevIndex = currentImgIdIndex === 0 ? imgInfos.length - 1 : currentImgIdIndex - 1;\n      setCurrentImgIdIndex(prevIndex);\n      setCurrentImgId(imgInfos[prevIndex].id);\n      switchImgSrc(imgInfos[prevIndex].id);\n    }\n  }\n\n  const switchToNextImg = () => {\n    if (imgInfos.length > 1) {\n      const nextIndex = currentImgIdIndex === imgInfos.length - 1 ? 0 : currentImgIdIndex + 1;\n      setCurrentImgIdIndex(nextIndex);\n      setCurrentImgId(imgInfos[nextIndex].id);\n      switchImgSrc(imgInfos[nextIndex].id);\n    }\n  }\n\n  const initImgInfos = (infos) => {\n    const imgInfosArr = Object.keys(infos).map(id => ({\n      id: id,\n      ...infos[id]\n    }))\n    setImgInfos(imgInfosArr);\n    setCurrentImgId(imgInfosArr[0].id);\n    setCurrentImgIdIndex(0);\n    switchImgSrc(imgInfosArr[0].id);\n  }\n\n  const switchImgSrc = (imgId) => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + currentLoc + '/' + imgId)).then(snap => {\n      if(snap.exists()){\n        setCurrentImgSrc(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n    const db = getDatabase();\n    get(ref(db, 'img_info/' + currentLoc)).then(snap => {\n      if(snap.exists()){\n        initImgInfos(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }, [currentLoc])\n\n  // useEffect(() => {\n  //   navigator.geolocation.getCurrentPosition(\n  //     function(position) {\n  //       console.log(position);\n  //     },\n  //     function(error) {\n  //       console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n  //     }\n  //   );\n  // })\n\n  return (\n    <div className=\"App\">\n      {\n        currentLoc\n          ? <div>\n              <Header location={currentLoc} />\n              <ImageSwitch switchPrev={switchToPrevImg} switchNext={switchToNextImg} />\n              <ActionMenu imgInfo={imgInfos[currentImgIdIndex]} openCanvas={({ isNew }) => {setCanvasVisibility(true); setIsNewPainting(isNew);}} canvasVisibility={canvasVisibility} />\n            </div>\n          : <LocationsMenu />\n      }\n      {\n        canvasVisibility && <Canvas isNew={isNewPainting} basePrevIds={imgInfos[currentImgIdIndex].prev_img_ids || []} closeCanvas={() => setCanvasVisibility(false)} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\nimport { getDatabase, ref, get } from \"firebase/database\";\n\nfunction Scene() {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const [imgSrcs, setImgSrcs] = useState({});\n\n  useEffect(() => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + currentLoc)).then(snap => {\n      if(snap.exists()){\n        setImgSrcs(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }, [currentLoc]);\n\n  return (\n    <a-scene\n      id=\"a-scene\"\n      vr-mode-ui=\"enabled: false;\"\n      renderer=\"logarithmicDepthBuffer: true;\"\n      arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n    >\n      <a-assets>\n        {imgSrcs && Object.keys(imgSrcs).map(imgId => <img id={imgId} src={imgSrcs[imgId]} crossOrigin=\"anonymous\" />)}\n      </a-assets>\n      {currentImgSrc && <a-image\n        src={'#'+currentImgId}\n        width={11}\n        height={8}\n        position=\"0 1.5 -10\"\n        rotation=\"0 0 0\">\n      </a-image>}\n      \n      {/* <a-entity camera></a-entity> */}\n    </a-scene>\n  )\n}\n\nexport default Scene;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeApp } from 'firebase/app';\nimport Scene from './Scene';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState } from './atoms.js';\nimport { RecoilRoot } from \"recoil\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nconst firebaseApp = initializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\nconst Root = () => {\n  const currentLoc = useRecoilValue(currentLocState);\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      {currentLoc && <Scene />}\n      <App />\n    </div>\n  );\n}\n\nReactDOM.render(<RecoilRoot><Root /></RecoilRoot>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}