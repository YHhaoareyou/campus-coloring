{"version":3,"sources":["locations.js","LocationsMenu.js","Home.js","ImageSwitch.js","ActionMenu.js","atoms.js","Canvas.js","Paintings.js","auth.js","Header.js","App.js","reportWebVitals.js","Scene.js","index.js"],"names":["locations","garden","name","range","minLat","maxLat","minLong","maxLong","MapContainer","styled","Row","div","BasePin","i","PinGarden","Pin51","Pin52","Pin51_60","Pin60_61","locationComponentPairs","loc","Pin","LocationsMenu","useState","currentCoor","setCurrentCoor","selectedLoc","setSelectedLoc","retrieveCoorFailed","setRetrieveCoorFailed","handleRetrievingCoor","navigator","geolocation","getCurrentPosition","position","coords","error","useEffect","retrieveCoorTimer","setInterval","clearInterval","isCoorInRange","LocCoorRange","latitude","longitude","style","paddingTop","className","map","onClick","color","Modal","centered","show","onHide","Header","closeButton","Title","Body","textAlign","src","width","to","Button","variant","Home","LeftSwitchWrapper","RightSwitchWrapper","SwitchButton","ImageSwitch","switchPrev","switchNext","Fragment","MenuWrapper","Container","ActionButton","ActionMenu","imgInfo","openCanvas","canvasVisibility","likeTrigger","showModal","setShowModal","likes","Object","keys","length","setLikes","includes","liked","setLiked","Col","xs","Card","height","overflowY","padding","as","margin","title","Text","fontSize","detail","size","window","location","href","origin","pathname","creator_id","disabled","prev_img_ids","id","isNew","currentLocState","atom","key","default","currentImgIdState","currentImgSrcState","userState","dangerouslyAllowMutability","PainterMenuWrapper","ActionButtonLg","getWindowDimensions","url","cv","innerWidth","innerHeight","insertImageToCanvas","fabricCanvas","fabric","Image","fromURL","img","scaleToWidth","add","set","left","top","crossOrigin","Canvas","closeCanvas","basePrevIds","currentLoc","useRecoilValue","currentImgId","currentImgSrc","windowDimensions","useRef","lineColor","setLineColor","lineWidth","setLineWidth","fillColor","setFillColor","Tools","Pencil","tool","setTool","canUndo","setCanUndo","canRedo","setCanRedo","current","_fc","zIndex","backgroundColor","ref","forceValue","onChange","prev","now","imageFormat","paddingRight","ButtonGroup","Line","Rectangle","Circle","OverlayTrigger","trigger","placement","overlay","props","Popover","hex","border","display","verticalAlign","min","max","value","changeEvent","target","Select","copy","paste","alert","removeSelected","marginBottom","undo","redo","clear","storage","getStorage","db","getDatabase","prompt","Date","dataUrl","toDataURL","uploadString","storageRef","then","snap","getDownloadURL","dbSet","dbRef","catch","err","Paintings","setCurrentLoc","useSetRecoilState","useRecoilState","setCurrentImgId","setCurrentImgSrc","currentImgIdIndex","setCurrentImgIdIndex","setCanvasVisibility","imgInfos","setImgInfos","isNewPainting","setIsNewPainting","initImgInfos","infos","imgInfosArr","Array","isArray","pid","queryString","parse","search","indexOf","switchImgSrc","imgId","get","exists","val","console","updateLikes","action","qs","mode","baseIds","bid","idsObj","forEach","uid","userPaintingIdsSnap","prevIndex","stringify","history","replaceState","path","nextIndex","login","provider","GoogleAuthProvider","auth","getAuth","signInWithRedirect","useUser","user","Navbar","background","Brand","Collapse","Nav","back","NavDropdown","displayName","Item","signOut","logout","Auth","children","isLoading","setIsLoading","setUser","onAuthStateChanged","useAuth","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Scene","imgSrcs","setImgSrcs","renderer","arjs","rotation","Root","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d804903.chunk.js","sourcesContent":["const locations = {\n  garden: {\n    name: 'Garden',\n    range: {\n      minLat: 35.0,\n      maxLat: 36.0,\n      minLong: 139.0,\n      maxLong: 140.0\n    }\n  },\n  '51': {\n    name: '51号館',\n    range: {\n      minLat: 35.7056,\n      maxLat: 35.7065,\n      minLong: 139.7066,\n      maxLong: 139.7069\n    }\n  },\n  '52': {\n    name: '52号館正面',\n    range: {\n      minLat: 35.7059,\n      maxLat: 35.7061,\n      minLong: 139.70695,\n      maxLong: 139.70725\n    }\n  },\n  '58': {\n    name: '58号館壁',\n    range: {\n      minLat: 35.70625,\n      maxLat: 35.70645,\n      minLong: 139.7054,\n      maxLong: 139.7057\n    }\n  },\n  '62': {\n    name: '62号館壁',\n    range: {\n      minLat: 35.70625,\n      maxLat: 35.70645,\n      minLong: 139.7054,\n      maxLong: 139.7057\n    }\n  },\n  '51_60': {\n    name: '51、60号館間の小路',\n    range: {\n      minLat: 35.7057,\n      maxLat: 35.7060,\n      minLong: 139.7058,\n      maxLong: 139.7061\n    }\n  },\n  '60_61': {\n    name: '60、61号館間の小路',\n    range: {\n      minLat: 35.7057,\n      maxLat: 35.7060,\n      minLong: 139.7061,\n      maxLong: 139.7064\n    }\n  }\n};\n\nexport default locations;","import { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport locations from './locations';\n\nconst Cards = styled(Row)`\n  margin: 0px 10px;\n`;\n\nconst MapContainer = styled.div`\n  position: relative;\n  margin: 0px auto;\n  width: 400px;\n  height: 160px;\n  background-image: url('/img/map.jpeg');\n  background-size: contain;\n`;\n\nconst BasePin = styled.i`\n  position: absolute;\n  font-size: 24px;\n`;\n\nconst PinGarden = styled(BasePin)`\ntop: 50px;\nleft: 250px;\n`;\n\nconst Pin51 = styled(BasePin)`\n  top: -10px;\n  left: 170px;\n`;\n\nconst Pin52 = styled(BasePin)`\n  top: 60px;\n  left: 210px;\n`;\n\nconst Pin51_60 = styled(BasePin)`\n  top: 70px;\n  left: 135px;\n`;\n\nconst Pin60_61 = styled(BasePin)`\n  top: 70px;\n  left: 105px;\n`;\n\nconst Pin58 = styled(BasePin)`\n  top: 20px;\n  left: 70px;\n`;\n\nconst Pin62 = styled(BasePin)`\n  top: 20px;\n  left: 60px;\n`;\n\nconst locationComponentPairs = [\n  {loc: 'garden', Pin: PinGarden},\n  {loc: '51', Pin: Pin51},\n  {loc: '52', Pin: Pin52},\n  {loc: '51_60', Pin: Pin51_60},\n  {loc: '60_61', Pin: Pin60_61},\n  {loc: '62', Pin: Pin62}\n]\n\nfunction LocationsMenu() {\n  const [currentCoor, setCurrentCoor] = useState(null);\n  const [selectedLoc, setSelectedLoc] = useState('');\n  const [retrieveCoorFailed, setRetrieveCoorFailed] = useState(false);\n\n  const handleRetrievingCoor = () => {\n    navigator.geolocation.getCurrentPosition(\n      function(position) {\n        setCurrentCoor(position.coords);\n        if (retrieveCoorFailed) setRetrieveCoorFailed(false);\n      },\n      function(error) {\n        setRetrieveCoorFailed(true);\n      }\n    );\n  }\n\n  useEffect(() => {\n    handleRetrievingCoor();\n    var retrieveCoorTimer = setInterval(handleRetrievingCoor, 5000);\n    return () => clearInterval(retrieveCoorTimer);\n  }, [])\n\n  const isCoorInRange = (LocCoorRange) =>\n    currentCoor && LocCoorRange\n      && (currentCoor.latitude >= LocCoorRange.minLat)\n      && (currentCoor.latitude <= LocCoorRange.maxLat)\n      && (currentCoor.longitude >= LocCoorRange.minLong)\n      && (currentCoor.longitude <= LocCoorRange.maxLong);\n\n  return (\n    <div style={{ paddingTop: '100px' }}>\n      <h3>場所を選択</h3>\n      {\n        !currentCoor && <p><i className=\"bi bi-arrow-clockwise\"></i> 位置情報取得中...</p>\n      }\n      {\n        retrieveCoorFailed && <p>位置情報取得失敗。位置情報の取得を許可し、遮蔽物のない空間に移動して数秒待ってください。</p>\n      }\n      <MapContainer>\n        {\n          locationComponentPairs.map(({loc, Pin}) => \n            <Pin key={loc} onClick={() => setSelectedLoc(loc)} className='bi bi-geo-alt-fill' style={{ color: isCoorInRange(locations[loc].range) ? 'orange' : 'black' }} />\n          )\n        }\n      </MapContainer>\n\n      <Modal centered show={selectedLoc !== ''} onHide={() => setSelectedLoc('')}>\n        <Modal.Header closeButton>\n          <Modal.Title>{selectedLoc && locations[selectedLoc].name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <img src={`/img/loc/${selectedLoc}.jpeg`} width='100%' />\n          {\n            selectedLoc && isCoorInRange(locations[selectedLoc].range)\n              ? (\n                <div>\n                  <p>↑の景色に向いてください</p>\n                  <Link to={'/' + selectedLoc}>\n                    <Button variant=\"outline-primary\">\n                      絵を観る\n                    </Button>\n                  </Link>\n                </div>\n              )\n              : <p>この場所に移動し、数秒待つと絵が見えるよ</p>\n          }\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n}\n\nexport default LocationsMenu;\n","import LocationsMenu from './LocationsMenu';\n\nfunction Home() {\n\n  return (\n    <div>\n      <LocationsMenu />\n    </div>\n  );\n}\n\nexport default Home;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport React from 'react';\n\nconst LeftSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  left: 0;\n`\n\nconst RightSwitchWrapper = styled.div`\n  position: absolute;\n  top: 50vh;\n  right: 0;\n`\n\nconst SwitchButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.3);\n  color: rgba(200, 200, 200);\n  border: none;\n  font-size: 36px;\n  padding: 0px;\n`;\n\nfunction ImageSwitch({ switchPrev, switchNext }) {\n  return(\n    <React.Fragment>\n      <LeftSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchPrev}><i className=\"bi bi-chevron-compact-left\"></i></SwitchButton>\n      </LeftSwitchWrapper>\n      <RightSwitchWrapper>\n        <SwitchButton variant=\"light\" onClick={switchNext}><i className=\"bi bi-chevron-compact-right\"></i></SwitchButton>\n      </RightSwitchWrapper>\n    </React.Fragment>\n  )\n}\n\nexport default ImageSwitch;","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, Card, Modal } from 'react-bootstrap';\n\nconst MenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(248, 249, 250, 0.5);\n  padding: 10px;\n  padding-right: 20px;\n`\n\nconst ActionButton = styled(Button)`\n  background: rgba(255, 255, 255, 0.5);\n  border: none;\n  width: 100%;\n`\n\n// Todo: notification (like, 上書き)\n\nfunction ActionMenu({ imgInfo, openCanvas, canvasVisibility, likeTrigger }) {\n  const [showModal, setShowModal] = useState(false);\n  const [likes, setLikes] = useState(imgInfo.likes ? Object.keys(imgInfo.likes).length : 0)\n  const [liked, setLiked] = useState(imgInfo.likes && Object.keys(imgInfo.likes).includes('26577319'))\n\n  const handleLikeTrigger = () => {\n    likeTrigger();\n    setLikes(liked ? likes - 1 : likes + 1);\n    setLiked(!liked);\n  }\n\n  const navigateToBasePaintings = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=base&bid=' + imgInfo.id;\n  }\n\n  const navigateToUserPaintings = () => {\n    window.location.href = window.location.origin + window.location.pathname + '?mode=user&uid=' + imgInfo.creator_id;\n  }\n\n  return !canvasVisibility && (\n    <MenuWrapper>\n      <Row>\n        <Col xs={8}>\n          <Card style={{ height: '100px', overflowY: 'scroll' }}>\n            <Card.Body style={{ padding: '5px' }}>\n              <Card.Title as='h6' style={{ margin: '5px' }}>{imgInfo.title}</Card.Title>\n              <Card.Text style={{ fontSize: '14px' }}>\n                {imgInfo.detail}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs={4}>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={navigateToUserPaintings}>\n                <i className=\"bi bi-person\"></i>\n                <br />\n                User\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={handleLikeTrigger}>\n                <i className=\"bi bi-heart\" style={{ color: liked ? 'red' : 'black' }}></i>\n                <br />\n                {likes}\n              </ActionButton>\n            </Col>\n          </Row>\n          <Row>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' disabled={!imgInfo.prev_img_ids} onClick={navigateToBasePaintings}>\n                <i className=\"bi bi-collection\"></i>\n                <br />\n                前作へ\n              </ActionButton>\n            </Col>\n            <Col style={{ padding: 0 }}>\n              <ActionButton variant='light' size='sm' onClick={() => setShowModal(true)}>\n                <i className=\"bi bi-pencil\"></i>\n                <br />\n                描こう\n              </ActionButton>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <Modal centered show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>どんな絵を描きたい？</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ textAlign: 'center' }}>\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: true }); setShowModal(false);}}>\n            新しく描こう\n          </Button>\n          <br /><br />\n          <Button variant=\"outline-primary\" onClick={() => {openCanvas({ isNew: false }); setShowModal(false);}}>\n            これをベースにして描こう\n          </Button>\n        </Modal.Body>\n      </Modal>\n\n    </MenuWrapper>\n  )\n}\n\nexport default ActionMenu;","import { atom } from \"recoil\";\n\nexport const currentLocState = atom({\n  key: 'currentLocState',\n  default: '',\n});\n\nexport const currentImgIdState = atom({\n  key: 'currentImgIdState',\n  default: '',\n});\n\nexport const currentImgSrcState = atom({\n  key: 'currentImgSrcState',\n  default: '',\n});\n\nexport const userState = atom ({\n  key: 'userState',\n  default: null,\n  dangerouslyAllowMutability: true,\n})","import { useEffect, useState, useRef } from 'react';\nimport { ReactPainter } from \"react-painter\";\nimport { getDatabase, ref as dbRef, set as dbSet } from \"firebase/database\";\nimport { getStorage, ref as storageRef, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, ButtonGroup, OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { CompactPicker } from 'react-color';\nimport { SketchField, Tools } from 'react-sketch';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { fabric } from \"fabric\";\n\nconst PainterMenuWrapper = styled(Container)`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100vw;\n  height: 120px;\n  padding: 5px;\n  background-color: rgba(248, 249, 250, 0.5);\n`;\n\nconst ActionButton = styled(Button)`\n  margin: 0px;\n  margin-bottom: 2px;\n  padding: 0px;\n  width: 60px;\n  height: 35px;\n`;\n\nconst ActionButtonLg = styled(ActionButton)`\n  width: 50px;\n  height: 50px;\n`\n\nfunction getWindowDimensions(url, cv) {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction insertImageToCanvas(url, fabricCanvas) {\n  fabric.Image.fromURL(\n    url,\n    function (img) {\n      img.scaleToWidth(getWindowDimensions().width);\n      fabricCanvas.add(img.set({\n        left: 0,\n        top: 0,\n      }));\n    },\n    {\n      crossOrigin: 'Anonymous'\n    }\n  )\n}\n\nconst Canvas = ({ closeCanvas, basePrevIds, isNew }) => {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  const cv = useRef(null);\n  const [ lineColor, setLineColor ] = useState('#000');\n  const [ lineWidth, setLineWidth ] = useState(5);\n  const [ fillColor, setFillColor ] = useState('transparent');\n  const [ tool, setTool ] = useState(Tools.Pencil);\n  const [ canUndo, setCanUndo ] = useState(false);\n  const [ canRedo, setCanRedo ] = useState(false);\n\n  // load base painting on canvas\n  useEffect(() => {\n    if (!isNew) {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  }, []);\n\n  const undo = () => {\n    cv.current.undo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const redo = () => {\n    cv.current.redo();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n  };\n\n  const clear = () => {\n    cv.current.clear();\n    setCanUndo(cv.current.canUndo());\n    setCanRedo(cv.current.canRedo());\n    if (!isNew) {\n      insertImageToCanvas(currentImgSrc, cv.current._fc);\n    }\n  };\n\n  const duplicateSelected = () => {\n    try {\n      cv.current.copy();\n      cv.current.paste();\n    } catch (error) {\n      alert(\"まずコピペしたいパーツを選択してください\")\n    }\n  }\n\n  const removeSelected = () => {\n    try {\n      cv.current.removeSelected();\n    } catch (error) {\n      alert(\"まず削除したいパーツを選択してください\")\n    }\n  }\n\n  // Todo: save draft\n\n  const onSketchChange = () => {\n    let prev = canUndo;\n    let now = cv.current.canUndo();\n    if (prev !== now) setCanUndo(now);\n  };\n\n  const saveCanvas = () => {\n    var title, detail, id;\n    const storage = getStorage();\n    const db = getDatabase();\n\n    title = prompt(\"タイトル：\");\n    detail = prompt(\"この作品についての説明：\");\n    \n    id = Date.now();\n    if (title === \"\") title = id;\n\n    const dataUrl = cv.current.toDataURL();\n\n    uploadString(storageRef(storage, 'paintings/' + title), dataUrl, 'data_url')\n      .then(snap => getDownloadURL(snap.ref))\n      .then(url => {\n\n        // save url\n        dbSet(dbRef(db, 'img_urls/' + currentLoc + '/' + id), url)\n          .then(snap => {\n\n            // save info\n            dbSet(dbRef(db, 'img_info/' + currentLoc + '/' + id), {\n              title,\n              detail,\n              creator_id: '26577319',\n              prev_img_ids: !isNew && { [currentImgId]: true, ...basePrevIds }\n            })\n              .then(snap => {\n\n                // add img id to user\n                dbSet(dbRef(db, 'users/' + '26577319' + '/img_ids/' + currentLoc + '/' + id), true)\n                  .then(snap => {\n\n                    // uploaded notification\n                    alert(\"アップロードしました！\");\n                    closeCanvas();\n                    window.location.href = \"/\" + currentLoc + \"?pid=\" + id\n\n                  }).catch(err => alert(err))\n              }).catch(err => alert(err));\n          }).catch(err => alert(err));\n      }).catch(err => alert(err));\n  }\n\n  const colorSelector = (props) => (\n    <Popover {...props} style={{ ...props.style, padding: '10px' }}>\n      線<br />\n      <CompactPicker\n        id='lineColor'\n        color={lineColor}\n        onChange={(color) => setLineColor(color.hex)}\n      />\n      <br /><br />\n      中身{\" \"}\n      <Button style={{ padding: '0px 10px' }} variant='secondary' onClick={() => setFillColor('transparent')}>中身なし</Button>\n      <br />\n      <CompactPicker\n        id='fillColor'\n        color={fillColor}\n        onChange={(color) => {setFillColor(color.hex); setLineColor('#000'); setLineColor(lineColor);}}\n      />\n    </Popover>\n  )\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        zIndex: 1000,\n        left: 0,\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n      }}\n    >\n      <SketchField\n        name=\"sketch\"\n        className=\"canvas-area\"\n        ref={cv}\n        lineColor={lineColor}\n        lineWidth={lineWidth}\n        fillColor={fillColor || 'transparent'}\n        width={windowDimensions.width}\n        height={windowDimensions.height}\n        forceValue\n        onChange={onSketchChange}\n        tool={tool}\n        imageFormat={'jpeg'}\n      />\n\n      <PainterMenuWrapper>\n        <Row>\n          <Col xs={7} style={{ paddingRight: '5px' }}>\n            <div>\n              <ButtonGroup>\n                <Button variant={tool === Tools.Pencil ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Pencil)}><i className=\"bi bi-pencil\" /></Button>\n                <Button variant={tool === Tools.Line ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Line)}><i className=\"bi bi-slash-lg\" /></Button>\n                <Button variant={tool === Tools.Rectangle ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Rectangle)}><i className=\"bi bi-square\" /></Button>\n                <Button variant={tool === Tools.Circle ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Circle)}><i className=\"bi bi-circle\" /></Button>\n                <OverlayTrigger trigger=\"click\" placement=\"top\" overlay={colorSelector} style={{ position: 'relative' }}>\n                  <Button variant='light'>\n                    <i className=\"bi bi-palette\" />{\" \"}\n                    <span style={{ border: '3px solid' + lineColor, backgroundColor: fillColor, width: '15px', height: '15px', display: 'inline-block', verticalAlign: 'middle' }}></span>\n                  </Button>\n                </OverlayTrigger>\n              </ButtonGroup>\n            </div>\n\n            <div>\n              <span style={{ display: 'inline-block', width: '20px' }}></span>\n              <i className=\"bi bi-border-width\" />{\" \"}\n              <div style={{ display: 'inline-block', verticalAlign: 'middle' }}>\n                <RangeSlider\n                  min={1}\n                  max={30}\n                  value={lineWidth}\n                  onChange={changeEvent => setLineWidth(changeEvent.target.value)}\n                />\n              </div>\n            </div>\n\n            <ButtonGroup>\n              <ActionButton variant={tool === Tools.Select ? \"secondary\" : \"light\"} onClick={() => setTool(Tools.Select)}><i className=\"bi bi-hand-index-thumb\" /></ActionButton>\n              <br />\n              <ActionButton disabled={tool !== Tools.Select} variant='light' onClick={duplicateSelected}><i className='bi bi-files' /></ActionButton>\n              <br />\n              <ActionButton disabled={tool !== Tools.Select} variant='light' onClick={removeSelected}><i className='bi bi-trash' /></ActionButton>\n            </ButtonGroup>\n          </Col>\n\n          <Col xs={5}>\n            <ButtonGroup style={{ marginBottom: '5px' }}>\n              <ActionButtonLg disabled={!canUndo} variant='light' onClick={undo}><i className='bi bi-arrow-90deg-left' /></ActionButtonLg>\n              <br />\n              <ActionButtonLg disabled={!canRedo} variant='light' onClick={redo}><i className='bi bi-arrow-90deg-right' /></ActionButtonLg>\n              <br />\n              <ActionButtonLg variant='light' onClick={clear}><i className='bi bi-arrow-counterclockwise' /></ActionButtonLg>\n            </ButtonGroup>\n\n            <ButtonGroup>\n              <ActionButtonLg variant='light' onClick={saveCanvas}><i className='bi bi-check-lg' /></ActionButtonLg>\n              <br />\n              <ActionButtonLg disabled={true} variant='light' onClick={() => {}}><i className='bi bi-hdd' /></ActionButtonLg>\n              <br />\n              <ActionButtonLg variant='light' onClick={closeCanvas}><i className='bi bi-x-lg' /></ActionButtonLg>\n            </ButtonGroup>\n          </Col>\n        </Row>\n      </PainterMenuWrapper>\n    </div>\n  )\n};\n\nexport default Canvas;","import { useEffect, useState } from 'react';\nimport ImageSwitch from './ImageSwitch';\nimport ActionMenu from './ActionMenu';\nimport Canvas from './Canvas';\nimport { useRecoilState, useSetRecoilState } from 'recoil';\nimport { currentImgIdState, currentImgSrcState, currentLocState } from './atoms.js';\nimport { getDatabase, ref, get, set } from \"firebase/database\";\nimport queryString from 'query-string';\n\nfunction Paintings({ loc, location }) {\n  const setCurrentLoc = useSetRecoilState(currentLocState);\n  const [currentImgId, setCurrentImgId] = useRecoilState(currentImgIdState);\n  const setCurrentImgSrc = useSetRecoilState(currentImgSrcState);\n  const [currentImgIdIndex, setCurrentImgIdIndex] = useState(0);\n  const [canvasVisibility, setCanvasVisibility] = useState(false);\n  const [imgInfos, setImgInfos] = useState([]);\n  const [isNewPainting, setIsNewPainting] = useState(true);\n\n  const switchToPrevImg = () => {\n    if (imgInfos.length > 1) {\n      const prevIndex = currentImgIdIndex === 0 ? imgInfos.length - 1 : currentImgIdIndex - 1;\n      setCurrentImgIdIndex(prevIndex);\n      setCurrentImgId(imgInfos[prevIndex].id);\n      switchImgSrc(imgInfos[prevIndex].id);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[prevIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const switchToNextImg = () => {\n    if (imgInfos.length > 1) {\n      const nextIndex = currentImgIdIndex === imgInfos.length - 1 ? 0 : currentImgIdIndex + 1;\n      setCurrentImgIdIndex(nextIndex);\n      setCurrentImgId(imgInfos[nextIndex].id);\n      switchImgSrc(imgInfos[nextIndex].id);\n\n      var qs = queryString.parse(location.search);\n      qs.pid = imgInfos[nextIndex].id;\n      const url = window.location.origin + window.location.pathname + '?' + queryString.stringify(qs);\n      window.history.replaceState({ path: url }, '', url)\n    }\n  }\n\n  const initImgInfos = (infos) => {\n    var imgInfosArr = infos;\n    if (!Array.isArray(infos)) {\n      imgInfosArr = Object.keys(infos).map(id => ({\n        id: id,\n        ...infos[id]\n      }))\n    }\n\n    const pid = queryString.parse(location.search).pid;\n    setImgInfos(imgInfosArr);\n    setCurrentImgId(pid || imgInfosArr[0].id);\n    setCurrentImgIdIndex(pid ? imgInfosArr.map(img => img.id).indexOf(pid) : 0);\n    switchImgSrc(pid || imgInfosArr[0].id);\n  }\n\n  const switchImgSrc = (imgId) => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + loc + '/' + imgId)).then(snap => {\n      if(snap.exists()){\n        setCurrentImgSrc(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }\n\n  const updateLikes = (action) => {\n    var infos = imgInfos;\n    if (action === 1) {\n      infos[currentImgIdIndex].likes = {\n        ...infos[currentImgIdIndex].likes,\n        '26577319': true\n      };\n    } else {\n      delete infos[currentImgIdIndex].likes['26577319']\n    }\n    setImgInfos(infos);\n  }\n\n  const likeTrigger = () => {\n    const db = getDatabase();\n    imgInfos[currentImgIdIndex].likes && imgInfos[currentImgIdIndex].likes['26577319']\n      ? set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + '26577319'), null).then(snap => updateLikes(-1))\n      : set(ref(db, 'img_info/' + loc + '/' + currentImgId + '/likes/' + '26577319'), true).then(snap => updateLikes(1))\n  }\n\n  useEffect(() => {\n    setCurrentLoc(loc);\n\n    const qs = queryString.parse(location.search)\n    const db = getDatabase();\n    get(ref(db, 'img_info/' + loc)).then(snap => {\n      if(snap.exists()){\n        if (qs.mode && qs.mode === 'base') {\n          const baseIds = Object.keys(snap.val()[qs.bid].prev_img_ids);\n          var idsObj = {};\n          baseIds.forEach(id => {\n            idsObj[id] = snap.val()[id]\n          });\n          initImgInfos(idsObj);\n        } else if (qs.mode && qs.mode === 'user') {\n          get(ref(db, 'users/' + qs.uid + '/img_ids/' + loc)).then(userPaintingIdsSnap => {\n            var idsObj = {};\n            Object.keys(userPaintingIdsSnap.val()).forEach(id => {\n              idsObj[id] = snap.val()[id]\n            });\n            initImgInfos(idsObj);\n          })\n        } else {\n          initImgInfos(snap.val());\n        }\n      }\n    }).catch(err => console.error(err));\n  }, [])\n\n  return (\n    <div>\n      <ImageSwitch switchPrev={switchToPrevImg} switchNext={switchToNextImg} />\n      {\n        imgInfos.length > 0 && (\n          <ActionMenu\n            imgInfo={imgInfos[currentImgIdIndex]}\n            openCanvas={({ isNew }) => {setCanvasVisibility(true); setIsNewPainting(isNew);}}\n            canvasVisibility={canvasVisibility}\n            likeTrigger={likeTrigger}\n          />\n        )\n      }\n      {\n        canvasVisibility && (\n          <Canvas\n            isNew={isNewPainting}\n            basePrevIds={imgInfos[currentImgIdIndex].prev_img_ids || {}}\n            closeCanvas={() => setCanvasVisibility(false)}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Paintings;\n","import { useEffect, useState } from \"react\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { userState } from './atoms';\nimport {\n  getAuth,\n  signInWithRedirect,\n  signOut,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n} from \"firebase/auth\";\n\nexport const login = () => {\n  const provider = new GoogleAuthProvider();\n  const auth = getAuth();\n  return signInWithRedirect(auth, provider);\n};\n\nexport const logout = () => {\n  const auth = getAuth();\n  return signOut(auth);\n};\n\nexport const useAuth = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const setUser = useSetRecoilState(userState);\n\n  useEffect(() => {\n    const auth = getAuth();\n    return onAuthStateChanged(auth, (user) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n  }, [setUser]);\n\n  return isLoading;\n};\n\nexport const useUser = () => {\n  return useRecoilValue(userState);\n};","import styled from 'styled-components';\nimport { Navbar, Nav, NavDropdown, Container, Button } from 'react-bootstrap';\nimport { login, logout, useUser } from './auth';\nimport { useEffect } from 'react';\nimport locations from './locations';\nimport { currentLocState } from './atoms';\nimport { useRecoilValue } from 'recoil';\n\nconst HeaderWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  text-align: center;\n  width: 100vw;\n  height: 50px;\n  background-color: rgba(248, 249, 250, 0.5);\n`\n\nfunction Header() {\n  const user = useUser();\n  const loc = useRecoilValue(currentLocState);\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  const handleLogout = () => {\n    logout().catch((error) => console.error(error));\n  };\n\n  return(\n    <Navbar style={{ position: 'absolute', left: 0, top: 0, width: '100vw', background: 'rgba(255, 255, 255, 0.5)' }}>\n      <Container>\n        <Navbar.Brand>{loc ? locations[loc].name : 'Campus as Canvas'}</Navbar.Brand>\n        <Navbar.Collapse>\n          {loc ? <Nav className=\"me-auto\">\n            <Button className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.location.href = '/'}>他の場所へ</Button>\n            <span style={{ width: '10px' }}></span>\n            <Button className=\"btn btn-sm\" variant=\"outline-secondary\" onClick={() => window.history.back()}>戻る</Button>\n          </Nav> : <Nav className=\"me-auto\"></Nav>}\n          <Nav>\n            <NavDropdown title={user?.displayName || \"ログイン\"}>\n              {\n                user\n                  ? <NavDropdown.Item onClick={handleLogout}>ログアウト</NavDropdown.Item>\n                  : <NavDropdown.Item onClick={handleLogin}>ログイン</NavDropdown.Item>\n              }\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n      {/* {false && <Button onClick={() => window.history.back()}>←</Button>} */}\n    </Navbar>\n  )\n}\n\nexport default Header;","import { Router } from '@reach/router';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport Home from './Home';\nimport Paintings from \"./Paintings\";\nimport { useAuth, useUser, login } from './auth';\nimport Header from './Header';\n\nconst Auth = ({ children }) => {\n  const isLoading = useAuth();\n\n  return isLoading ? <p>Loading...</p> : children;\n};\n\nfunction App() {\n  const user = useUser();\n\n  const handleLogin = () => {\n    login().catch((error) => console.error(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <Auth>\n        <div>\n          {\n            user\n              ? (\n                <div>\n                  <Header />\n                  <Router>\n                    <Home path=\"/\" />\n                    <Paintings path=\"/:loc\" />\n                  </Router>\n                </div>\n              )\n              : (\n                <div>\n                  <button onClick={handleLogin}>ログイン</button>\n                </div>\n              )\n          }\n        </div>\n      </Auth>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState, useEffect } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState, currentImgIdState, currentImgSrcState } from './atoms.js';\nimport { getDatabase, ref, get } from \"firebase/database\";\n\nfunction Scene() {\n  const currentLoc = useRecoilValue(currentLocState);\n  const currentImgSrc = useRecoilValue(currentImgSrcState);\n  const currentImgId = useRecoilValue(currentImgIdState);\n  const [imgSrcs, setImgSrcs] = useState({});\n\n  useEffect(() => {\n    const db = getDatabase();\n    get(ref(db, 'img_urls/' + currentLoc)).then(snap => {\n      if(snap.exists()){\n        setImgSrcs(snap.val())\n      }\n    }).catch(err => console.error(err));\n  }, [currentLoc]);\n\n  // Todo: locate AR images (depth)\n  // Todo: adjust AR images size\n\n  return (\n    <a-scene\n      id=\"a-scene\"\n      vr-mode-ui=\"enabled: false;\"\n      renderer=\"logarithmicDepthBuffer: true;\"\n      arjs=\"trackingMethod: best; sourceType: webcam;debugUIEnabled: false;\"\n    >\n      <a-assets>\n        {imgSrcs && Object.keys(imgSrcs).map(imgId => <img key={imgId} id={imgId} src={imgSrcs[imgId]} crossOrigin=\"anonymous\" />)}\n      </a-assets>\n      {currentImgSrc && <a-image\n        src={'#'+currentImgId}\n        width={11}\n        height={8}\n        position=\"0 1.5 -10\"\n        rotation=\"0 0 0\">\n      </a-image>}\n      \n      {/* <a-entity camera></a-entity> */}\n    </a-scene>\n  )\n}\n\nexport default Scene;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { initializeApp } from 'firebase/app';\nimport Scene from './Scene';\nimport { useRecoilValue } from 'recoil';\nimport { currentLocState } from './atoms.js';\nimport { RecoilRoot } from \"recoil\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nconst firebaseApp = initializeApp({\n  apiKey: \"AIzaSyAA4zXM0wRBrL1l65NHg_8mQcjg75ew9RQ\",\n  authDomain: \"campus-coloring.firebaseapp.com\",\n  databaseURL: \"https://campus-coloring.firebaseio.com\",\n  projectId: \"campus-coloring\",\n  storageBucket: \"campus-coloring.appspot.com\",\n  messagingSenderId: \"45926036058\",\n  appId: \"1:45926036058:web:a9271137ac86762843de63\",\n  measurementId: \"G-WPPW3TX4QG\",\n});\n\nconst Root = () => {\n  const currentLoc = useRecoilValue(currentLocState);\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      {currentLoc && <Scene />}\n      <App />\n    </div>\n  );\n}\n\nReactDOM.render(<RecoilRoot><Root /></RecoilRoot>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}